{
  "AWS Batch": {
    "Actions": [
      "CancelJob", 
      "CreateComputeEnvironment", 
      "CreateJobQueue", 
      "DeleteComputeEnvironment", 
      "DeleteJobQueue", 
      "DeregisterJobDefinition", 
      "DescribeComputeEnvironments", 
      "DescribeJobDefinitions", 
      "DescribeJobQueues", 
      "DescribeJobs", 
      "ListJobs", 
      "RegisterJobDefinition", 
      "SubmitJob", 
      "TerminateJob", 
      "UpdateComputeEnvironment", 
      "UpdateJobQueue"
    ], 
    "HasResource": false, 
    "StringPrefix": "batch"
  }, 
  "AWS Billing": {
    "Actions": [
      "ModifyAccount", 
      "ModifyBilling", 
      "ModifyPaymentMethods", 
      "ViewAccount", 
      "ViewBilling", 
      "ViewPaymentMethods", 
      "ViewUsage"
    ], 
    "HasResource": false, 
    "StringPrefix": "aws-portal"
  }, 
  "AWS Budget Service": {
    "ARNFormat": "arn:aws:budgets::<account_ID>:budget/<budgetname>", 
    "ARNRegex": "^arn:aws:budgets::.+:.+", 
    "Actions": [
      "ModifyBudget", 
      "ViewBudget"
    ], 
    "HasResource": true, 
    "StringPrefix": "budgets"
  }, 
  "AWS Certificate Manager": {
    "ARNFormat": "arn:aws:acm:<region>:<account_ID>:<arn_type>/<resource_id>", 
    "ARNRegex": "^arn:aws:acm:.+:[0-9]+:.+", 
    "Actions": [
      "AddTagsToCertificate", 
      "DeleteCertificate", 
      "DescribeCertificate", 
      "GetCertificate", 
      "ImportCertificate", 
      "ListCertificates", 
      "ListTagsForCertificate", 
      "RemoveTagsFromCertificate", 
      "RequestCertificate", 
      "ResendValidationEmail"
    ], 
    "HasResource": true, 
    "StringPrefix": "acm"
  }, 
  "AWS CloudFormation": {
    "ARNFormat": "arn:aws:cloudformation:<region>:<account>:<resourceType>/<name>/<id>", 
    "ARNRegex": "^arn:aws:cloudformation:.+:[0-9]+:.+", 
    "Actions": [
      "CancelUpdateStack", 
      "ContinueUpdateRollback", 
      "CreateChangeSet", 
      "CreateStack", 
      "CreateUploadBucket", 
      "DeleteChangeSet", 
      "DeleteStack", 
      "DescribeAccountLimits", 
      "DescribeChangeSet", 
      "DescribeStackEvents", 
      "DescribeStackResource", 
      "DescribeStackResources", 
      "DescribeStacks", 
      "EstimateTemplateCost", 
      "ExecuteChangeSet", 
      "GetStackPolicy", 
      "GetTemplate", 
      "GetTemplateSummary", 
      "ListChangeSets", 
      "ListStackResources", 
      "ListStacks", 
      "PreviewStackUpdate", 
      "SetStackPolicy", 
      "SignalResource", 
      "UpdateStack", 
      "ValidateTemplate"
    ], 
    "HasResource": true, 
    "StringPrefix": "cloudformation", 
    "conditionKeys": [
      "cloudformation:ChangeSetName", 
      "cloudformation:ResourceTypes", 
      "cloudformation:RoleArn", 
      "cloudformation:StackPolicyUrl", 
      "cloudformation:TemplateUrl"
    ]
  }, 
  "AWS CloudHSM": {
    "Actions": [
      "AddTagsToResource", 
      "CreateHapg", 
      "CreateHsm", 
      "CreateLunaClient", 
      "DeleteHapg", 
      "DeleteHsm", 
      "DeleteLunaClient", 
      "DescribeHapg", 
      "DescribeHsm", 
      "DescribeLunaClient", 
      "GetConfig", 
      "ListAvailableZones", 
      "ListHapgs", 
      "ListHsms", 
      "ListLunaClients", 
      "ListTagsForResource", 
      "ModifyHapg", 
      "ModifyHsm", 
      "ModifyLunaClient", 
      "RemoveTagsFromResource"
    ], 
    "HasResource": false, 
    "StringPrefix": "cloudhsm"
  }, 
  "AWS CloudTrail": {
    "ARNFormat": "arn:aws:cloudtrail:<region>:<account>:<resource>", 
    "ARNRegex": "^arn:aws:cloudtrail:.+:[0-9]+:.+", 
    "Actions": [
      "AddTags", 
      "CreateTrail", 
      "DeleteTrail", 
      "DescribeTrails", 
      "GetEventSelectors", 
      "GetTrailStatus", 
      "ListPublicKeys", 
      "ListTags", 
      "LookupEvents", 
      "PutEventSelectors", 
      "RemoveTags", 
      "StartLogging", 
      "StopLogging", 
      "UpdateTrail"
    ], 
    "HasResource": true, 
    "StringPrefix": "cloudtrail"
  }, 
  "AWS CodeBuild": {
    "ARNFormat": "arn:aws:codebuild:<region>:<account_ID>:<resource_type>/<resource_id>", 
    "ARNRegex": "^arn:aws:codebuild:.+:[0-9]+:.+/.+", 
    "Actions": [
      "BatchDeleteBuilds", 
      "BatchGetBuilds", 
      "BatchGetProjects", 
      "CreateProject", 
      "DeleteProject", 
      "ListBuilds", 
      "ListBuildsForProject", 
      "ListConnectedOAuthAccounts", 
      "ListCuratedEnvironmentImages", 
      "ListProjects", 
      "ListRepositories", 
      "PersistOAuthToken", 
      "StartBuild", 
      "StopBuild", 
      "UpdateProject"
    ], 
    "HasResource": true, 
    "StringPrefix": "codebuild"
  }, 
  "AWS CodeCommit": {
    "ARNFormat": "arn:aws:codecommit:<region>:<account_ID>:<repository_name>", 
    "ARNRegex": "^arn:aws:codecommit:.+", 
    "Actions": [
      "BatchGetRepositories", 
      "CreateBranch", 
      "CreateRepository", 
      "DeleteBranch", 
      "DeleteRepository", 
      "GetBlob", 
      "GetBranch", 
      "GetCommit", 
      "GetObjectIdentifier", 
      "GetReferences", 
      "GetRepository", 
      "GetRepositoryTriggers", 
      "GetTree", 
      "GitPull", 
      "GitPush", 
      "ListBranches", 
      "ListRepositories", 
      "PutRepositoryTriggers", 
      "TestRepositoryTriggers", 
      "UpdateDefaultBranch", 
      "UpdateRepositoryDescription", 
      "UpdateRepositoryName"
    ], 
    "HasResource": true, 
    "StringPrefix": "codecommit"
  }, 
  "AWS CodeDeploy": {
    "ARNFormat": "arn:aws:codedeploy:region:account:resource-type:resource-specifier", 
    "ARNRegex": "^arn:aws:codedeploy:.+", 
    "Actions": [
      "AddTagsToOnPremisesInstances", 
      "BatchGetApplicationRevisions", 
      "BatchGetApplications", 
      "BatchGetDeploymentGroups", 
      "BatchGetDeploymentInstances", 
      "BatchGetDeployments", 
      "BatchGetOnPremisesInstances", 
      "ContinueDeployment", 
      "CreateApplication", 
      "CreateDeployment", 
      "CreateDeploymentConfig", 
      "CreateDeploymentGroup", 
      "DeleteApplication", 
      "DeleteDeploymentConfig", 
      "DeleteDeploymentGroup", 
      "DeregisterOnPremisesInstance", 
      "GetApplication", 
      "GetApplicationRevision", 
      "GetDeployment", 
      "GetDeploymentConfig", 
      "GetDeploymentGroup", 
      "GetDeploymentInstance", 
      "GetOnPremisesInstance", 
      "ListApplicationRevisions", 
      "ListApplications", 
      "ListDeploymentConfigs", 
      "ListDeploymentGroups", 
      "ListDeploymentInstances", 
      "ListDeployments", 
      "ListOnPremisesInstances", 
      "RegisterApplicationRevision", 
      "RegisterOnPremisesInstance", 
      "RemoveTagsFromOnPremisesInstances", 
      "StopDeployment", 
      "UpdateApplication", 
      "UpdateDeploymentGroup"
    ], 
    "HasResource": true, 
    "StringPrefix": "codedeploy"
  }, 
  "AWS CodePipeline": {
    "ARNFormat": "arn:aws:codepipeline:<region>:<account_ID>:<path_to_pipeline_resource>", 
    "ARNRegex": "arn:aws:codepipeline:.+", 
    "Actions": [
      "AcknowledgeJob", 
      "AcknowledgeThirdPartyJob", 
      "CreateCustomActionType", 
      "CreatePipeline", 
      "DeleteCustomActionType", 
      "DeletePipeline", 
      "DisableStageTransition", 
      "EnableStageTransition", 
      "GetJobDetails", 
      "GetPipeline", 
      "GetPipelineExecution", 
      "GetPipelineState", 
      "GetThirdPartyJobDetails", 
      "ListActionTypes", 
      "ListPipelineExecutions", 
      "ListPipelines", 
      "PollForJobs", 
      "PollForThirdPartyJobs", 
      "PutActionRevision", 
      "PutApprovalResult", 
      "PutJobFailureResult", 
      "PutJobSuccessResult", 
      "PutThirdPartyJobFailureResult", 
      "PutThirdPartyJobSuccessResult", 
      "RetryStageExecution", 
      "StartPipelineExecution", 
      "UpdatePipeline"
    ], 
    "HasResource": true, 
    "StringPrefix": "codepipeline"
  }, 
  "AWS CodeStar": {
    "ARNFormat": "arn:aws:codestar:<region>:<account_ID>:<resource_type>/<resource_id>", 
    "ARNRegex": "^arn:aws:codestar:.+:[0-9]+:project/.+", 
    "Actions": [
      "AssociateTeamMember", 
      "CreateProject", 
      "CreateUserProfile", 
      "DeleteExtendedAccess", 
      "DeleteProject", 
      "DeleteUserProfile", 
      "DescribeProject", 
      "DescribeUserProfile", 
      "DisassociateTeamMember", 
      "GetExtendedAccess", 
      "ListProjects", 
      "ListResources", 
      "ListTeamMembers", 
      "ListUserProfiles", 
      "PutExtendedAccess", 
      "UpdateProject", 
      "UpdateTeamMember", 
      "UpdateUserProfile", 
      "VerifyServiceRole"
    ], 
    "HasResource": true, 
    "StringPrefix": "codestar"
  }, 
  "AWS Config": {
    "Actions": [
      "DeleteConfigRule", 
      "DeleteConfigurationRecorder", 
      "DeleteDeliveryChannel", 
      "DeleteEvaluationResults", 
      "DeliverConfigSnapshot", 
      "DescribeComplianceByConfigRule", 
      "DescribeComplianceByResource", 
      "DescribeConfigRuleEvaluationStatus", 
      "DescribeConfigRules", 
      "DescribeConfigurationRecorderStatus", 
      "DescribeConfigurationRecorders", 
      "DescribeDeliveryChannelStatus", 
      "DescribeDeliveryChannels", 
      "GetComplianceDetailsByConfigRule", 
      "GetComplianceDetailsByResource", 
      "GetComplianceSummaryByConfigRule", 
      "GetComplianceSummaryByResourceType", 
      "GetResourceConfigHistory", 
      "GetResources", 
      "GetTagKeys", 
      "ListDiscoveredResources", 
      "PutConfigRule", 
      "PutConfigurationRecorder", 
      "PutDeliveryChannel", 
      "PutEvaluations", 
      "StartConfigRulesEvaluation", 
      "StartConfigurationRecorder", 
      "StopConfigurationRecorder"
    ], 
    "HasResource": false, 
    "StringPrefix": "config"
  }, 
  "AWS Cost and Usage Report": {
    "ARNFormat": "arn:aws:cur:<region>:<account_ID>:definition/<reportname>", 
    "ARNRegex": "^arn:aws:cur:.+:.+:.+", 
    "Actions": [
      "DeleteReportDefinition", 
      "DescribeReportDefinitions", 
      "PutReportDefinition"
    ], 
    "HasResource": true, 
    "StringPrefix": "cur"
  }, 
  "AWS Database Migration Service": {
    "ARNFormat": "arn:aws:dms:<region>:<account>:<resource>", 
    "ARNRegex": "arn:aws:dms:.+", 
    "Actions": [
      "AddTagsToResource", 
      "CreateEndpoint", 
      "CreateReplicationInstance", 
      "CreateReplicationSubnetGroup", 
      "CreateReplicationTask", 
      "DeleteEndpoint", 
      "DeleteEventSubscription", 
      "DeleteReplicationInstance", 
      "DeleteReplicationSubnetGroup", 
      "DeleteReplicationTask", 
      "DescribeAccountAttributes", 
      "DescribeCertificates", 
      "DescribeConnections", 
      "DescribeEndpointTypes", 
      "DescribeEndpoints", 
      "DescribeEventCategories", 
      "DescribeEventSubscriptions", 
      "DescribeEvents", 
      "DescribeOrderableReplicationInstances", 
      "DescribeRefreshSchemasStatus", 
      "DescribeReplicationInstances", 
      "DescribeReplicationSubnetGroups", 
      "DescribeReplicationTasks", 
      "DescribeSchemas", 
      "DescribeTableStatistics", 
      "ListTagsForResource", 
      "ModifyEndpoint", 
      "ModifyEventSubscription", 
      "ModifyReplicationInstance", 
      "ModifyReplicationSubnetGroup", 
      "ModifyReplicationTask", 
      "RefreshSchemas", 
      "RemoveTagsFromResource", 
      "StartReplicationTask", 
      "StopReplicationTask", 
      "TestConnection"
    ], 
    "HasResource": false, 
    "StringPrefix": "dms"
  }, 
  "AWS Device Farm": {
    "Actions": [
      "CreateDevicePool", 
      "CreateNetworkProfile", 
      "CreateProject", 
      "CreateRemoteAccessSession", 
      "CreateUpload", 
      "DeleteDevicePool", 
      "DeleteNetworkProfile", 
      "DeleteProject", 
      "DeleteRemoteAccessSession", 
      "DeleteRun", 
      "DeleteUpload", 
      "GetAccountSettings", 
      "GetDevice", 
      "GetDevicePool", 
      "GetDevicePoolCompatibility", 
      "GetJob", 
      "GetNetworkProfile", 
      "GetOfferingStatus", 
      "GetProject", 
      "GetRemoteAccessSession", 
      "GetRun", 
      "GetSuite", 
      "GetTest", 
      "GetUpload", 
      "InstallToRemoteAccessSession", 
      "ListArtifacts", 
      "ListDevicePools", 
      "ListDevices", 
      "ListJobs", 
      "ListNetworkProfiles", 
      "ListOfferingTransactions", 
      "ListOfferings", 
      "ListProjects", 
      "ListRemoteAccessSessions", 
      "ListRuns", 
      "ListSamples", 
      "ListSuites", 
      "ListTests", 
      "ListUniqueProblems", 
      "ListUploads", 
      "PurchaseOffering", 
      "RenewOffering", 
      "ScheduleRun", 
      "StopRemoteAccessSession", 
      "StopRun", 
      "UpdateDevicePool", 
      "UpdateNetworkProfile", 
      "UpdateProject"
    ], 
    "HasResource": false, 
    "StringPrefix": "devicefarm"
  }, 
  "AWS Direct Connect": {
    "Actions": [
      "AllocateConnectionOnInterconnect", 
      "AllocatePrivateVirtualInterface", 
      "AllocatePublicVirtualInterface", 
      "ConfirmConnection", 
      "ConfirmPrivateVirtualInterface", 
      "ConfirmPublicVirtualInterface", 
      "CreateConnection", 
      "CreateInterconnect", 
      "CreatePrivateVirtualInterface", 
      "CreatePublicVirtualInterface", 
      "DeleteConnection", 
      "DeleteInterconnect", 
      "DeleteVirtualInterface", 
      "DescribeConnectionLoa", 
      "DescribeConnections", 
      "DescribeConnectionsOnInterconnect", 
      "DescribeInterconnectLoa", 
      "DescribeInterconnects", 
      "DescribeLocations", 
      "DescribeVirtualGateways", 
      "DescribeVirtualInterfaces"
    ], 
    "HasResource": false, 
    "StringPrefix": "directconnect"
  }, 
  "AWS Directory Service": {
    "Actions": [
      "AddIpRoutes", 
      "AddTagsToResource", 
      "AuthorizeApplication", 
      "AuthorizeApplicaton", 
      "CancelSchemaExtension", 
      "ConnectDirectory", 
      "CreateAlias", 
      "CreateComputer", 
      "CreateConditionalForwarder", 
      "CreateDirectory", 
      "CreateMicrosoftAD", 
      "CreateSnapshot", 
      "CreateTrust", 
      "DeleteConditionalForwarder", 
      "DeleteDirectory", 
      "DeleteSnapshot", 
      "DeleteTrust", 
      "DeregisterEventTopic", 
      "DescribeConditionalForwarders", 
      "DescribeDirectories", 
      "DescribeEventTopics", 
      "DescribeSnapshots", 
      "DescribeTrusts", 
      "DisableRadius", 
      "DisableSso", 
      "EnableRadius", 
      "EnableSso", 
      "GetDirectoryLimits", 
      "GetSnapshotLimits", 
      "ListAuthorizedApplications", 
      "ListIpRoutes", 
      "ListSchemaExtensions", 
      "ListTagsForResource", 
      "RegisterEventTopic", 
      "RemoveIpRoutes", 
      "RemoveTagsFromResource", 
      "RestoreFromSnapshot", 
      "StartSchemaExtension", 
      "UnauthorizeApplication", 
      "UpdateConditionalForwarder", 
      "UpdateRadius", 
      "VerifyTrust"
    ], 
    "HasResource": false, 
    "StringPrefix": "ds"
  }, 
  "AWS Elastic Beanstalk": {
    "ARNFormat": "arn:aws:elasticbeanstalk:<region>:<account_ID>:<resource_type>/<path_to_resource>", 
    "ARNRegex": "^arn:aws:elasticbeanstalk:.+:.*:.+/.+", 
    "Actions": [
      "AbortEnvironmentUpdate", 
      "ApplyEnvironmentManagedAction", 
      "CheckDNSAvailability", 
      "ComposeEnvironments", 
      "CreateApplication", 
      "CreateApplicationVersion", 
      "CreateConfigurationTemplate", 
      "CreateEnvironment", 
      "CreatePlatformVersion", 
      "CreateStorageLocation", 
      "DeleteApplication", 
      "DeleteApplicationVersion", 
      "DeleteConfigurationTemplate", 
      "DeleteEnvironmentConfiguration", 
      "DeletePlatformVersion", 
      "DescribeApplicationVersions", 
      "DescribeApplications", 
      "DescribeConfigurationOptions", 
      "DescribeConfigurationSettings", 
      "DescribeEnvironmentHealth", 
      "DescribeEnvironmentManagedActionHistory", 
      "DescribeEnvironmentManagedActions", 
      "DescribeEnvironmentResources", 
      "DescribeEnvironments", 
      "DescribeEvents", 
      "DescribeInstancesHealth", 
      "DescribePlatformVersion", 
      "ListAvailableSolutionStacks", 
      "ListPlatformVersions", 
      "RebuildEnvironment", 
      "RequestEnvironmentInfo", 
      "RestartAppServer", 
      "RetrieveEnvironmentInfo", 
      "SwapEnvironmentCNAMEs", 
      "TerminateEnvironment", 
      "UpdateApplication", 
      "UpdateApplicationResourceLifecycle", 
      "UpdateApplicationVersion", 
      "UpdateConfigurationTemplate", 
      "UpdateEnvironment", 
      "ValidateConfigurationSettings"
    ], 
    "HasResource": true, 
    "StringPrefix": "elasticbeanstalk", 
    "conditionKeys": [
      "elasticbeanstalk:FromApplication", 
      "elasticbeanstalk:FromApplicationVersion", 
      "elasticbeanstalk:FromConfigurationTemplate", 
      "elasticbeanstalk:FromEnvironment", 
      "elasticbeanstalk:FromSolutionStack", 
      "elasticbeanstalk:InApplication"
    ]
  }, 
  "AWS Glue": {
    "Actions": [
      "BatchCreatePartition", 
      "BatchDeleteConnection", 
      "BatchDeletePartition", 
      "BatchDeleteTable", 
      "BatchGetPartition", 
      "CreateClassifier", 
      "CreateConnection", 
      "CreateCrawler", 
      "CreateDatabase", 
      "CreateDevEndpoint", 
      "CreateJob", 
      "CreatePartition", 
      "CreateScript", 
      "CreateTable", 
      "CreateTrigger", 
      "CreateUserDefinedFunction", 
      "DeleteClassifier", 
      "DeleteConnection", 
      "DeleteCrawler", 
      "DeleteDatabase", 
      "DeleteDevEndpoint", 
      "DeleteJob", 
      "DeletePartition", 
      "DeleteTable", 
      "DeleteTrigger", 
      "DeleteUserDefinedFunction", 
      "GetCatalogImportStatus", 
      "GetClassifier", 
      "GetClassifiers", 
      "GetConnection", 
      "GetConnections", 
      "GetCrawler", 
      "GetCrawlerMetrics", 
      "GetCrawlers", 
      "GetDatabase", 
      "GetDatabases", 
      "GetDataflowGraph", 
      "GetDevEndpoint", 
      "GetDevEndpoints", 
      "GetJob", 
      "GetJobRun", 
      "GetJobRuns", 
      "GetJobs", 
      "GetMapping", 
      "GetPartition", 
      "GetPartitions", 
      "GetPlan", 
      "GetTable", 
      "GetTableVersions", 
      "GetTables", 
      "GetTrigger", 
      "GetTriggers", 
      "GetUserDefinedFunction", 
      "GetUserDefinedFunctions", 
      "ImportCatalogToGlue", 
      "ResetJobBookmark", 
      "StartCrawler", 
      "StartCrawlerSchedule", 
      "StartJobRun", 
      "StartTrigger", 
      "StopCrawler", 
      "StopCrawlerSchedule", 
      "StopTrigger", 
      "UpdateClassifier", 
      "UpdateConnection", 
      "UpdateCrawler", 
      "UpdateDatabase", 
      "UpdateDevEndpoint", 
      "UpdateJob", 
      "UpdatePartition", 
      "UpdateTable", 
      "UpdateTrigger", 
      "UpdateUserDefinedFunction"
    ], 
    "HasResource": false, 
    "StringPrefix": "glue"
  }, 
  "AWS Greengrass": {
    "ARNFormat": "arn:aws:greengrass:<region>:<account_ID>:/greengrass/<type>/<Id>", 
    "ARNRegex": "^arn:aws:greengrass:.+:[0-9]+:.+", 
    "Actions": [
      "AssociateRoleToGroup", 
      "AssociateServiceRoleToAccount", 
      "CreateCoreDefinition", 
      "CreateCoreDefinitionVersion", 
      "CreateDeployment", 
      "CreateDeviceDefinition", 
      "CreateDeviceDefinitionVersion", 
      "CreateFunctionDefinition", 
      "CreateFunctionDefinitionVersion", 
      "CreateGroup", 
      "CreateGroupCertificateAuthority", 
      "CreateGroupVersion", 
      "CreateLoggerDefinition", 
      "CreateLoggerDefinitionVersion", 
      "CreateSubscriptionDefinition", 
      "CreateSubscriptionDefinitionVersion", 
      "DeleteCoreDefinition", 
      "DeleteDeviceDefinition", 
      "DeleteFunctionDefinition", 
      "DeleteGroup", 
      "DeleteLoggerDefinition", 
      "DeleteSubscriptionDefinition", 
      "DisassociateRoleFromGroup", 
      "DisassociateServiceRoleFromAccount", 
      "GetAssociatedRole", 
      "GetConnectivityInfo", 
      "GetCoreDefinition", 
      "GetCoreDefinitionVersion", 
      "GetDeploymentStatus", 
      "GetDeviceDefinition", 
      "GetDeviceDefinitionVersion", 
      "GetFunctionDefinition", 
      "GetFunctionDefinitionVersion", 
      "GetGroup", 
      "GetGroupCertificateAuthority", 
      "GetGroupCertificateConfiguration", 
      "GetGroupVersion", 
      "GetLoggerDefinition", 
      "GetLoggerDefinitionVersion", 
      "GetServiceRoleForAccount", 
      "GetSubscriptionDefinition", 
      "GetSubscriptionDefinitionVersion", 
      "ListCoreDefinitionVersions", 
      "ListCoreDefinitions", 
      "ListDeployments", 
      "ListDeviceDefinitionVersions", 
      "ListDeviceDefinitions", 
      "ListFunctionDefinitionVersions", 
      "ListFunctionDefinitions", 
      "ListGroupCertificateAuthorities", 
      "ListGroupVersions", 
      "ListGroups", 
      "ListLoggerDefinitionVersions", 
      "ListLoggerDefinitions", 
      "ListSubscriptionDefinitionVersions", 
      "ListSubscriptionDefinitions", 
      "ResetDeployments", 
      "UpdateConnectivityInfo", 
      "UpdateCoreDefinition", 
      "UpdateDeviceDefinition", 
      "UpdateFunctionDefinition", 
      "UpdateGroup", 
      "UpdateGroupCertificateConfiguration", 
      "UpdateLoggerDefinition", 
      "UpdateSubscriptionDefinition"
    ], 
    "HasResource": true, 
    "StringPrefix": "greengrass"
  }, 
  "AWS Health APIs and Notifications": {
    "ARNFormat": "arn:aws:health::<namespace>:<relative-id>", 
    "ARNRegex": "^arn:aws:health:[^:]*:[^:]*:.+", 
    "Actions": [
      "DescribeAffectedEntities", 
      "DescribeEntityAggregates", 
      "DescribeEventAggregates", 
      "DescribeEventDetails", 
      "DescribeEventTypes", 
      "DescribeEvents"
    ], 
    "HasResource": true, 
    "StringPrefix": "health"
  }, 
  "AWS Import Export Disk Service": {
    "Actions": [
      "CancelJob", 
      "CreateJob", 
      "GetShippingLabel", 
      "GetStatus", 
      "ListJobs", 
      "UpdateJob"
    ], 
    "HasResource": false, 
    "StringPrefix": "importexport"
  }, 
  "AWS IoT": {
    "ARNFormat": "arn:aws:iot:<region>:<account_ID>:<type>/<name>", 
    "ARNRegex": "^arn:aws:iot:.+:[0-9]+:.+", 
    "Actions": [
      "AcceptCertificateTransfer", 
      "AttachPrincipalPolicy", 
      "AttachThingPrincipal", 
      "CancelCertificateTransfer", 
      "Connect", 
      "CreateCertificateFromCsr", 
      "CreateKeysAndCertificate", 
      "CreatePolicy", 
      "CreatePolicyVersion", 
      "CreateThing", 
      "CreateThingType", 
      "CreateTopicRule", 
      "DeleteCACertificate", 
      "DeleteCertificate", 
      "DeletePolicy", 
      "DeletePolicyVersion", 
      "DeleteRegistrationCode", 
      "DeleteThing", 
      "DeleteThingShadow", 
      "DeleteThingType", 
      "DeleteTopicRule", 
      "DeprecateThingType", 
      "DescribeCACertificate", 
      "DescribeCertificate", 
      "DescribeEndpoint", 
      "DescribeThing", 
      "DescribeThingType", 
      "DetachPrincipalPolicy", 
      "DetachThingPrincipal", 
      "DisableTopicRule", 
      "EnableTopicRule", 
      "GetLoggingOptions", 
      "GetPolicy", 
      "GetPolicyVersion", 
      "GetRegistrationCode", 
      "GetThingShadow", 
      "GetTopicRule", 
      "ListCACertificates", 
      "ListCertificates", 
      "ListCertificatesByCA", 
      "ListOutgoingCertificates", 
      "ListPolicies", 
      "ListPolicyPrincipals", 
      "ListPolicyVersions", 
      "ListPrincipalPolicies", 
      "ListPrincipalThings", 
      "ListThingPrincipals", 
      "ListThingTypes", 
      "ListThings", 
      "ListTopicRules", 
      "Publish", 
      "Receive", 
      "RegisterCACertificate", 
      "RegisterCertificate", 
      "RejectCertificateTransfer", 
      "ReplaceTopicRule", 
      "SetDefaultPolicyVersion", 
      "SetLoggingOptions", 
      "Subscribe", 
      "TransferCertificate", 
      "UpdateCACertificate", 
      "UpdateCertificate", 
      "UpdateThing", 
      "UpdateThingShadow"
    ], 
    "HasResource": true, 
    "StringPrefix": "iot"
  }, 
  "AWS Key Management Service": {
    "ARNFormat": "arn:aws:kms:<region>:<account_id>:<resource_type>/<id>", 
    "ARNRegex": "^arn:aws:kms:.+", 
    "Actions": [
      "CancelKeyDeletion", 
      "CreateAlias", 
      "CreateGrant", 
      "CreateKey", 
      "Decrypt", 
      "DeleteAlias", 
      "DeleteImportedKeyMaterial", 
      "DescribeKey", 
      "DisableKey", 
      "DisableKeyRotation", 
      "EnableKey", 
      "EnableKeyRotation", 
      "Encrypt", 
      "GenerateDataKey", 
      "GenerateDataKeyWithoutPlaintext", 
      "GenerateRandom", 
      "GetKeyPolicy", 
      "GetKeyRotationStatus", 
      "GetParametersForImport", 
      "ImportKeyMaterial", 
      "ListAliases", 
      "ListGrants", 
      "ListKeyPolicies", 
      "ListKeys", 
      "ListResourceTags", 
      "ListRetirableGrants", 
      "PutKeyPolicy", 
      "ReEncryptFrom", 
      "ReEncryptTo", 
      "RetireGrant", 
      "RevokeGrant", 
      "ScheduleKeyDeletion", 
      "TagResource", 
      "UntagResource", 
      "UpdateAlias", 
      "UpdateKeyDescription"
    ], 
    "HasResource": true, 
    "StringPrefix": "kms"
  }, 
  "AWS Lambda": {
    "ARNFormat": "arn:aws:lambda:<region>:<account>:function:<functionName>", 
    "ARNRegex": "^arn:aws:lambda:.+", 
    "Actions": [
      "AddPermission", 
      "CreateAlias", 
      "CreateEventSourceMapping", 
      "CreateFunction", 
      "DeleteAlias", 
      "DeleteEventSourceMapping", 
      "DeleteFunction", 
      "EnableReplication", 
      "GetAccountSettings", 
      "GetAlias", 
      "GetEventSourceMapping", 
      "GetFunction", 
      "GetFunctionConfiguration", 
      "GetPolicy", 
      "Invoke", 
      "InvokeAsync", 
      "InvokeFunction", 
      "ListAliases", 
      "ListEventSourceMappings", 
      "ListFunctions", 
      "ListTags", 
      "ListVersionsByFunction", 
      "PublishVersion", 
      "RemovePermission", 
      "TagResource", 
      "UntagResource", 
      "UpdateAlias", 
      "UpdateEventSourceMapping", 
      "UpdateFunctionCode", 
      "UpdateFunctionConfiguration"
    ], 
    "HasResource": true, 
    "StringPrefix": "lambda"
  }, 
  "AWS Marketplace": {
    "Actions": [
      "Subscribe", 
      "Unsubscribe", 
      "ViewSubscriptions"
    ], 
    "HasResource": false, 
    "StringPrefix": "aws-marketplace"
  }, 
  "AWS Marketplace Management Portal": {
    "Actions": [
      "uploadFiles", 
      "viewMarketing", 
      "viewReports", 
      "viewSupport"
    ], 
    "HasResource": false, 
    "StringPrefix": "aws-marketplace-management"
  }, 
  "AWS Marketplace Metering Service": {
    "Actions": [
      "BatchMeterUsage", 
      "MeterUsage", 
      "ResolveCustomer"
    ], 
    "HasResource": false, 
    "StringPrefix": "aws-marketplace"
  }, 
  "AWS Mobile Hub": {
    "ARNFormat": "arn:aws:mobilehub:<region>:<aws_account_ID>:project/<project_ID>", 
    "ARNRegex": "^arn:aws:mobilehub:.+:[0-9]+:.+", 
    "Actions": [
      "CreateProject", 
      "CreateServiceRole", 
      "DeleteProject", 
      "DeployToStage", 
      "GenerateProjectParameters", 
      "GetProject", 
      "ListAvailableFeatures", 
      "ListAvailableRegions", 
      "ListProjects", 
      "SynchronizeProject", 
      "UpdateProject", 
      "ValidateProject", 
      "VerifyServiceRole"
    ], 
    "HasResource": true, 
    "StringPrefix": "mobilehub"
  }, 
  "AWS OpsWorks": {
    "Actions": [
      "AssignInstance", 
      "AssignVolume", 
      "AssociateElasticIp", 
      "AttachElasticLoadBalancer", 
      "CloneStack", 
      "CreateApp", 
      "CreateDeployment", 
      "CreateInstance", 
      "CreateLayer", 
      "CreateStack", 
      "CreateUserProfile", 
      "DeleteApp", 
      "DeleteInstance", 
      "DeleteLayer", 
      "DeleteStack", 
      "DeleteUserProfile", 
      "DeregisterEcsCluster", 
      "DeregisterElasticIp", 
      "DeregisterInstance", 
      "DeregisterRdsDbInstance", 
      "DeregisterVolume", 
      "DescribeAgentVersions", 
      "DescribeApps", 
      "DescribeCommands", 
      "DescribeDeployments", 
      "DescribeEcsClusters", 
      "DescribeElasticIps", 
      "DescribeElasticLoadBalancers", 
      "DescribeInstances", 
      "DescribeLayers", 
      "DescribeLoadBasedAutoScaling", 
      "DescribeMyUserProfile", 
      "DescribePermissions", 
      "DescribeRaidArrays", 
      "DescribeRdsDbInstances", 
      "DescribeServiceErrors", 
      "DescribeStackProvisioningParameters", 
      "DescribeStackSummary", 
      "DescribeStacks", 
      "DescribeTimeBasedAutoScaling", 
      "DescribeUserProfiles", 
      "DescribeVolumes", 
      "DetachElasticLoadBalancer", 
      "DisassociateElasticIp", 
      "GetHostnameSuggestion", 
      "GrantAccess", 
      "RebootInstance", 
      "RegisterEcsCluster", 
      "RegisterElasticIp", 
      "RegisterInstance", 
      "RegisterRdsDbInstance", 
      "RegisterVolume", 
      "SetLoadBasedAutoScaling", 
      "SetPermission", 
      "SetTimeBasedAutoScaling", 
      "StartInstance", 
      "StartStack", 
      "StopInstance", 
      "StopStack", 
      "UnassignInstance", 
      "UnassignVolume", 
      "UpdateApp", 
      "UpdateElasticIp", 
      "UpdateInstance", 
      "UpdateLayer", 
      "UpdateMyUserProfile", 
      "UpdateRdsDbInstance", 
      "UpdateStack", 
      "UpdateUserProfile", 
      "UpdateVolume"
    ], 
    "HasResource": false, 
    "StringPrefix": "opsworks"
  }, 
  "AWS OpsWorks Configuration Management": {
    "ARNFormat": "arn:aws:opsworks-cm:<region>:<account>:<resourceType>/<id>", 
    "ARNRegex": "^arn:aws:opsworks-cm:.+:[0-9]+:.+", 
    "Actions": [
      "AssociateNode", 
      "CreateBackup", 
      "CreateServer", 
      "DeleteBackup", 
      "DeleteServer", 
      "DescribeAccountAttributes", 
      "DescribeBackups", 
      "DescribeEvents", 
      "DescribeNodeAssociationStatus", 
      "DescribeServers", 
      "DisassociateNode", 
      "RestoreServer", 
      "StartMaintenance", 
      "UpdateServer", 
      "UpdateServerEngineAttributes"
    ], 
    "HasResource": false, 
    "StringPrefix": "opsworks-cm"
  }, 
  "AWS Organizations": {
    "ARNFormat": "arn:aws:organizations::<masterAccountId>:<resource>/o-<organizationId>(/<resourceType>/<resourceId>)?", 
    "ARNRegex": "^arn:aws:organizations::.+:.+", 
    "Actions": [
      "AcceptHandshake", 
      "AttachPolicy", 
      "CancelHandshake", 
      "CreateAccount", 
      "CreateOrganization", 
      "CreateOrganizationalUnit", 
      "CreatePolicy", 
      "DeclineHandshake", 
      "DeleteOrganization", 
      "DeleteOrganizationalUnit", 
      "DeletePolicy", 
      "DescribeAccount", 
      "DescribeCreateAccountStatus", 
      "DescribeHandshake", 
      "DescribeOrganization", 
      "DescribeOrganizationalUnit", 
      "DescribePolicy", 
      "DetachPolicy", 
      "DisablePolicyType", 
      "EnableAllFeatures", 
      "EnableFullControl", 
      "EnablePolicyType", 
      "InviteAccountToOrganization", 
      "LeaveOrganization", 
      "ListAccounts", 
      "ListAccountsForParent", 
      "ListChildren", 
      "ListCreateAccountStatus", 
      "ListHandshakesForAccount", 
      "ListHandshakesForOrganization", 
      "ListOrganizationalUnitsForParent", 
      "ListParents", 
      "ListPolicies", 
      "ListPoliciesForTarget", 
      "ListRoots", 
      "ListTargetsForPolicy", 
      "MoveAccount", 
      "RemoveAccountFromOrganization", 
      "UpdateOrganizationalUnit", 
      "UpdatePolicy"
    ], 
    "HasResource": true, 
    "StringPrefix": "organizations"
  }, 
  "AWS Price List": {
    "Actions": [
      "DescribeServices", 
      "GetAttributeValues", 
      "GetProducts"
    ], 
    "HasResource": false, 
    "StringPrefix": "pricing"
  }, 
  "AWS Security Token Service": {
    "ARNFormat": "arn:aws:iam::<namespace>:<relative-id>", 
    "ARNRegex": "^arn:aws:iam::.+", 
    "Actions": [
      "AssumeRole", 
      "AssumeRoleWithSAML", 
      "AssumeRoleWithWebIdentity", 
      "DecodeAuthorizationMessage", 
      "GetCallerIdentity", 
      "GetFederationToken", 
      "GetSessionToken"
    ], 
    "HasResource": true, 
    "StringPrefix": "sts"
  }, 
  "AWS Service Catalog": {
    "ARNFormat": "arn:aws:(catalog|servicecatalog):<region>:<account>:<resourceType>/<id>", 
    "ARNRegex": "^arn:aws:(catalog|servicecatalog):.+", 
    "Actions": [
      "AcceptPortfolioShare", 
      "AssociatePrincipalWithPortfolio", 
      "AssociateProductWithPortfolio", 
      "CreateConstraint", 
      "CreatePortfolio", 
      "CreatePortfolioShare", 
      "CreateProduct", 
      "CreateProvisioningArtifact", 
      "DeleteConstraint", 
      "DeletePortfolio", 
      "DeletePortfolioShare", 
      "DeleteProduct", 
      "DeleteProvisioningArtifact", 
      "DescribeConstraint", 
      "DescribePortfolio", 
      "DescribeProduct", 
      "DescribeProductAsAdmin", 
      "DescribeProductView", 
      "DescribeProvisioningArtifact", 
      "DescribeProvisioningParameters", 
      "DescribeRecord", 
      "DisassociatePrincipalFromPortfolio", 
      "DisassociateProductFromPortfolio", 
      "ListAcceptedPortfolioShares", 
      "ListConstraintsForPortfolio", 
      "ListLaunchPaths", 
      "ListPortfolioAccess", 
      "ListPortfolios", 
      "ListPortfoliosForProduct", 
      "ListPrincipalsForPortfolio", 
      "ListProvisioningArtifacts", 
      "ListRecordHistory", 
      "ProvisionProduct", 
      "RejectPortfolioShare", 
      "ScanProvisionedProducts", 
      "SearchProducts", 
      "SearchProductsAsAdmin", 
      "TerminateProvisionedProduct", 
      "UpdateConstraint", 
      "UpdatePortfolio", 
      "UpdateProduct", 
      "UpdateProvisionedProduct", 
      "UpdateProvisioningArtifact"
    ], 
    "HasResource": false, 
    "StringPrefix": "servicecatalog", 
    "conditionKeys": [
      "servicecatalog:accountLevel", 
      "servicecatalog:roleLevel", 
      "servicecatalog:userLevel"
    ]
  }, 
  "AWS Shield": {
    "ARNFormat": "arn:aws:shield::<account_ID>:<resource>/<resource_id>", 
    "ARNRegex": "^arn:aws:shield::[0-9]+:.+/.+", 
    "Actions": [
      "CreateProtection", 
      "CreateSubscription", 
      "DeleteProtection", 
      "DeleteSubscription", 
      "DescribeAttack", 
      "DescribeProtection", 
      "DescribeSubscription", 
      "ListAttacks", 
      "ListProtections"
    ], 
    "HasResource": true, 
    "StringPrefix": "shield"
  }, 
  "AWS Step Functions": {
    "ARNFormat": "arn:aws:<serviceName>:<region>:<account>:<resourceType>:<resourceName>", 
    "ARNRegex": "^arn:aws:states:.+", 
    "Actions": [
      "CreateActivity", 
      "CreateStateMachine", 
      "DeleteActivity", 
      "DeleteStateMachine", 
      "DescribeActivity", 
      "DescribeExecution", 
      "DescribeStateMachine", 
      "GetActivityTask", 
      "GetExecutionHistory", 
      "ListActivities", 
      "ListExecutions", 
      "ListStateMachines", 
      "SendTaskFailure", 
      "SendTaskHeartbeat", 
      "SendTaskSuccess", 
      "StartExecution", 
      "StopExecution"
    ], 
    "HasResource": true, 
    "StringPrefix": "states"
  }, 
  "AWS Support": {
    "Actions": [
      "AddAttachmentsToSet", 
      "AddCommunicationToCase", 
      "CreateCase", 
      "DescribeAttachment", 
      "DescribeCases", 
      "DescribeCommunications", 
      "DescribeServices", 
      "DescribeSeverityLevels", 
      "DescribeTrustedAdvisorCheckRefreshStatuses", 
      "DescribeTrustedAdvisorCheckResult", 
      "DescribeTrustedAdvisorCheckSummaries", 
      "DescribeTrustedAdvisorChecks", 
      "RefreshTrustedAdvisorCheck", 
      "ResolveCase"
    ], 
    "HasResource": false, 
    "StringPrefix": "support"
  }, 
  "AWS Trusted Advisor": {
    "ARNFormat": "arn:aws:trustedadvisor:*:<account_ID>:checks/{category}/{checkId}", 
    "ARNRegex": "arn:aws:trustedadvisor:*", 
    "Actions": [
      "DescribeCheckItems", 
      "DescribeCheckRefreshStatuses", 
      "DescribeCheckSummaries", 
      "DescribeNotificationPreferences", 
      "ExcludeCheckItems", 
      "IncludeCheckItems", 
      "RefreshCheck", 
      "UpdateNotificationPreferences"
    ], 
    "HasResource": true, 
    "StringPrefix": "trustedadvisor"
  }, 
  "AWS WAF": {
    "ARNFormat": "arn:aws:waf::<account_ID>:<resource>/<resource_id>", 
    "ARNRegex": "^arn:aws:waf::[0-9]+:.+/.+", 
    "Actions": [
      "CreateByteMatchSet", 
      "CreateIPSet", 
      "CreateRateBasedRule", 
      "CreateRule", 
      "CreateSizeConstraintSet", 
      "CreateSqlInjectionMatchSet", 
      "CreateWebACL", 
      "CreateXssMatchSet", 
      "DeleteByteMatchSet", 
      "DeleteIPSet", 
      "DeleteRateBasedRule", 
      "DeleteRule", 
      "DeleteSizeConstraintSet", 
      "DeleteSqlInjectionMatchSet", 
      "DeleteWebACL", 
      "DeleteXssMatchSet", 
      "GetByteMatchSet", 
      "GetChangeToken", 
      "GetChangeTokenStatus", 
      "GetIPSet", 
      "GetRateBasedRule", 
      "GetRateBasedRuleManagedKeys", 
      "GetRule", 
      "GetSampledRequests", 
      "GetSizeConstraintSet", 
      "GetSqlInjectionMatchSet", 
      "GetWebACL", 
      "GetXssMatchSet", 
      "ListByteMatchSets", 
      "ListIPSets", 
      "ListRateBasedules", 
      "ListRules", 
      "ListSizeConstraintSets", 
      "ListSqlInjectionMatchSets", 
      "ListWebACLs", 
      "ListXssMatchSets", 
      "UpdateByteMatchSet", 
      "UpdateIPSet", 
      "UpdateRateBasedRule", 
      "UpdateRule", 
      "UpdateSizeConstraintSet", 
      "UpdateSqlInjectionMatchSet", 
      "UpdateWebACL", 
      "UpdateXssMatchSet"
    ], 
    "HasResource": true, 
    "StringPrefix": "waf"
  }, 
  "AWS WAF Regional": {
    "ARNFormat": "arn:aws:waf-regional:<region>:<account_ID>:<resource>/<resource_id>", 
    "ARNRegex": "^arn:aws:waf-regional:.+:[0-9]+:.+/.+", 
    "Actions": [
      "AssociateWebACL", 
      "CreateByteMatchSet", 
      "CreateIPSet", 
      "CreateRateBasedRule", 
      "CreateRule", 
      "CreateSizeConstraintSet", 
      "CreateSqlInjectionMatchSet", 
      "CreateWebACL", 
      "CreateXssMatchSet", 
      "DeleteByteMatchSet", 
      "DeleteIPSet", 
      "DeleteRateBasedRule", 
      "DeleteRule", 
      "DeleteSizeConstraintSet", 
      "DeleteSqlInjectionMatchSet", 
      "DeleteWebACL", 
      "DeleteXssMatchSet", 
      "DisassociateWebACL", 
      "GetByteMatchSet", 
      "GetChangeToken", 
      "GetChangeTokenStatus", 
      "GetIPSet", 
      "GetRateBasedRule", 
      "GetRateBasedRuleManagedKeys", 
      "GetRule", 
      "GetSampledRequests", 
      "GetSizeConstraintSet", 
      "GetSqlInjectionMatchSet", 
      "GetWebACL", 
      "GetWebACLForResource", 
      "GetXssMatchSet", 
      "ListByteMatchSets", 
      "ListIPSets", 
      "ListRateBasedules", 
      "ListResourcesForWebACL", 
      "ListRules", 
      "ListSizeConstraintSets", 
      "ListSqlInjectionMatchSets", 
      "ListWebACLs", 
      "ListXssMatchSets", 
      "UpdateByteMatchSet", 
      "UpdateIPSet", 
      "UpdateRateBasedRule", 
      "UpdateRule", 
      "UpdateSizeConstraintSet", 
      "UpdateSqlInjectionMatchSet", 
      "UpdateWebACL", 
      "UpdateXssMatchSet"
    ], 
    "HasResource": true, 
    "StringPrefix": "waf-regional"
  }, 
  "AWS XRay": {
    "Actions": [
      "BatchGetTraces", 
      "GetServiceGraph", 
      "GetTraceGraph", 
      "GetTraceSummaries", 
      "PutTelemetryRecords", 
      "PutTraceSegments"
    ], 
    "HasResource": false, 
    "StringPrefix": "xray"
  }, 
  "Amazon API Gateway": {
    "ARNFormat": "arn:aws:execute-api:<region>:<account_id>:<api_id>/<stage>/<method>/<api_specific_resource_path>", 
    "ARNRegex": "^arn:aws:execute-api:.+", 
    "Actions": [
      "InvalidateCache", 
      "Invoke"
    ], 
    "HasResource": true, 
    "StringPrefix": "execute-api"
  }, 
  "Amazon AWS Cloud Contact Center": {
    "ARNFormat": "arn:${Partition}:connect", 
    "ARNRegex": "^arn:${Partition}:connect:.+", 
    "Actions": [
      "CreateInstance", 
      "DescribeInstance", 
      "DestroyInstance", 
      "GetFederationToken", 
      "GetFederationTokens", 
      "ListInstances", 
      "ModifyInstance"
    ], 
    "HasResource": true, 
    "StringPrefix": "connect"
  }, 
  "Amazon AppStream": {
    "ARNFormat": "arn:aws:appstream:<region>:<account>:<resourceType>/<resourcePath>", 
    "ARNRegex": "^arn:aws:appstream:.+", 
    "Actions": [
      "AssociateFleet", 
      "CreateDirectoryConfig", 
      "CreateFleet", 
      "CreateImageBuilder", 
      "CreateImageBuilderStreamingURL", 
      "CreateStack", 
      "CreateStreamingURL", 
      "DeleteDirectoryConfig", 
      "DeleteFleet", 
      "DeleteImage", 
      "DeleteImageBuilder", 
      "DeleteStack", 
      "DescribeDirectoryConfigs", 
      "DescribeFleets", 
      "DescribeImageBuilders", 
      "DescribeImages", 
      "DescribeSessions", 
      "DescribeStacks", 
      "DisassociateFleet", 
      "ExpireSession", 
      "ListAssociatedFleets", 
      "ListAssociatedStacks", 
      "StartFleet", 
      "StartImageBuilder", 
      "StopFleet", 
      "StopImageBuilder", 
      "UpdateDirectoryConfig", 
      "UpdateFleet", 
      "UpdateStack"
    ], 
    "HasResource": true, 
    "StringPrefix": "appstream"
  }, 
  "Amazon Athena": {
    "Actions": [
      "BatchGetNamedQuery", 
      "BatchGetQueryExecution", 
      "CancelQueryExecution", 
      "CreateNamedQuery", 
      "DeleteNamedQuery", 
      "GetCatalogs", 
      "GetExecutionEngine", 
      "GetExecutionEngines", 
      "GetNamedQuery", 
      "GetNamespace", 
      "GetNamespaces", 
      "GetQueryExecution", 
      "GetQueryExecutions", 
      "GetQueryResults", 
      "GetTable", 
      "GetTables", 
      "ListNamedQueries", 
      "ListQueryExecutions", 
      "RunQuery", 
      "StartQueryExecution", 
      "StopQueryExecution"
    ], 
    "HasResource": false, 
    "StringPrefix": "athena"
  }, 
  "Amazon Chime": {
    "Actions": [
      "AcceptDelegate", 
      "ActivateUsers", 
      "AddDomain", 
      "AddOrUpdateGroups", 
      "AuthorizeDirectory", 
      "ConnectDirectory", 
      "CreateAccount", 
      "CreateCDRBucket", 
      "DeleteAccount", 
      "DeleteCDRBucket", 
      "DeleteDelegate", 
      "DeleteDomain", 
      "DeleteGroups", 
      "DisconnectDirectory", 
      "GetAccount", 
      "GetAccountResource", 
      "GetAccountSettings", 
      "GetCDRBucket", 
      "GetDomain", 
      "GetUser", 
      "GetUserByEmail", 
      "InviteDelegate", 
      "InviteUsers", 
      "ListAccounts", 
      "ListCDRBucket", 
      "ListDelegates", 
      "ListDirectories", 
      "ListDomains", 
      "ListGroups", 
      "ListUsers", 
      "LogoutUser", 
      "RenameAccount", 
      "RenewDelegate", 
      "ResetAccountResource", 
      "ResetPersonalPin", 
      "SubmitSupportRequest", 
      "SuspendUsers", 
      "UnauthorizeDirectory", 
      "UpdateAccountResource", 
      "UpdateAccountSettings", 
      "UpdateCDRBucket", 
      "UpdateSupportedLicenses", 
      "UpdateUserLicenses", 
      "ValidateAccountResource", 
      "ValidateDelegate"
    ], 
    "HasResource": false, 
    "StringPrefix": "chime"
  }, 
  "Amazon Cloud Directory": {
    "ARNFormat": "arn:aws:clouddirectory:<region>:<accountId>:<relative-id>", 
    "ARNRegex": "^arn:${Partition}:clouddirectory:.+:[0-9]+:(directory|schema)/.+", 
    "Actions": [
      "AddFacetToObject", 
      "ApplySchema", 
      "AttachObject", 
      "AttachPolicy", 
      "AttachToIndex", 
      "AttachTypedLink", 
      "BatchRead", 
      "BatchWrite", 
      "CreateDirectory", 
      "CreateFacet", 
      "CreateIndex", 
      "CreateObject", 
      "CreateSchema", 
      "CreateTypedLinkFacet", 
      "DeleteDirectory", 
      "DeleteFacet", 
      "DeleteObject", 
      "DeleteSchema", 
      "DeleteTypedLinkFacet", 
      "DetachFromIndex", 
      "DetachObject", 
      "DetachPolicy", 
      "DetachTypedLink", 
      "DisableDirectory", 
      "EnableDirectory", 
      "GetDirectory", 
      "GetFacet", 
      "GetObjectInformation", 
      "GetSchemaAsJson", 
      "GetTypedLinkFacetInformation", 
      "ListAppliedSchemaArns", 
      "ListAttachedIndices", 
      "ListDevelopmentSchemaArns", 
      "ListDirectories", 
      "ListFacetAttributes", 
      "ListFacetNames", 
      "ListIncomingTypedLinks", 
      "ListIndex", 
      "ListObjectAttributes", 
      "ListObjectChildren", 
      "ListObjectParentPaths", 
      "ListObjectParents", 
      "ListObjectPolicies", 
      "ListOutgoingTypedLinks", 
      "ListPolicyAttachments", 
      "ListPublishedSchemaArns", 
      "ListTagsForResource", 
      "ListTypedLinkFacetAttributes", 
      "ListTypedLinkFacetNames", 
      "LookupPolicy", 
      "PublishSchema", 
      "PutSchemaFromJson", 
      "RemoveFacetFromObject", 
      "TagResource", 
      "UntagResource", 
      "UpdateFacet", 
      "UpdateObjectAttributes", 
      "UpdateSchema", 
      "UpdateTypedLinkFacet"
    ], 
    "HasResource": true, 
    "StringPrefix": "clouddirectory"
  }, 
  "Amazon CloudFront": {
    "Actions": [
      "CreateCloudFrontOriginAccessIdentity", 
      "CreateDistribution", 
      "CreateDistributionWithTags", 
      "CreateInvalidation", 
      "CreateStreamingDistribution", 
      "CreateStreamingDistributionWithTags", 
      "DeleteCloudFrontOriginAccessIdentity", 
      "DeleteDistribution", 
      "DeleteStreamingDistribution", 
      "GetCloudFrontOriginAccessIdentity", 
      "GetCloudFrontOriginAccessIdentityConfig", 
      "GetDistribution", 
      "GetDistributionConfig", 
      "GetInvalidation", 
      "GetStreamingDistribution", 
      "GetStreamingDistributionConfig", 
      "ListCloudFrontOriginAccessIdentities", 
      "ListDistributions", 
      "ListDistributionsByWebACLId", 
      "ListInvalidations", 
      "ListStreamingDistributions", 
      "ListTagsForResource", 
      "TagResource", 
      "UntagResource", 
      "UpdateCloudFrontOriginAccessIdentity", 
      "UpdateDistribution", 
      "UpdateStreamingDistribution"
    ], 
    "HasResource": false, 
    "StringPrefix": "cloudfront"
  }, 
  "Amazon CloudSearch": {
    "ARNFormat": "arn:aws:cloudsearch:<region>:<account>:<resourceType>/<resourceName>", 
    "ARNRegex": "^arn:aws:cloudsearch:.+:.+:.+", 
    "Actions": [
      "AddTags", 
      "BuildSuggesters", 
      "CreateDomain", 
      "DefineAnalysisScheme", 
      "DefineExpression", 
      "DefineIndexField", 
      "DefineSuggester", 
      "DeleteAnalysisScheme", 
      "DeleteDomain", 
      "DeleteExpression", 
      "DeleteIndexField", 
      "DeleteSuggester", 
      "DescribeAnalysisSchemes", 
      "DescribeAvailabilityOptions", 
      "DescribeDomains", 
      "DescribeExpressions", 
      "DescribeIndexFields", 
      "DescribeScalingParameters", 
      "DescribeServiceAccessPolicies", 
      "DescribeSuggesters", 
      "IndexDocuments", 
      "ListDomainNames", 
      "ListTags", 
      "RemoveTags", 
      "UpdateAvailabilityOptions", 
      "UpdateScalingParameters", 
      "UpdateServiceAccessPolicies", 
      "document", 
      "search", 
      "suggest"
    ], 
    "HasResource": true, 
    "StringPrefix": "cloudsearch"
  }, 
  "Amazon CloudWatch": {
    "Actions": [
      "DeleteAlarms", 
      "DescribeAlarmHistory", 
      "DescribeAlarms", 
      "DescribeAlarmsForMetric", 
      "DisableAlarmActions", 
      "EnableAlarmActions", 
      "GetMetricData", 
      "GetMetricStatistics", 
      "ListMetrics", 
      "PutMetricAlarm", 
      "PutMetricData", 
      "SetAlarmState"
    ], 
    "HasResource": false, 
    "StringPrefix": "cloudwatch"
  }, 
  "Amazon CloudWatch Events": {
    "ARNFormat": "arn:aws:<serviceName>:<region>:<account>:<resourceType>/<resourceName>", 
    "ARNRegex": "^arn:aws:events:.+", 
    "Actions": [
      "DeleteRule", 
      "DescribeRule", 
      "DisableRule", 
      "EnableRule", 
      "ListRuleNamesByTarget", 
      "ListRules", 
      "ListTargetsByRule", 
      "PutEvents", 
      "PutRule", 
      "PutTargets", 
      "RemoveTargets", 
      "TestEventPattern"
    ], 
    "HasResource": true, 
    "StringPrefix": "events", 
    "conditionKeys": [
      "events: detail.userIdentity.principalId", 
      "events:TargetArn", 
      "events:detail-type", 
      "events:detail.userIdentity.principalId", 
      "events:source"
    ]
  }, 
  "Amazon CloudWatch Logs": {
    "ARNFormat": "arn:aws:logs:.+:.+:.+", 
    "ARNRegex": "^arn:aws:logs:.+", 
    "Actions": [
      "CancelExportTask", 
      "CreateExportTask", 
      "CreateLogGroup", 
      "CreateLogStream", 
      "DeleteDestination", 
      "DeleteLogGroup", 
      "DeleteLogStream", 
      "DeleteMetricFilter", 
      "DeleteRetentionPolicy", 
      "DeleteSubscriptionFilter", 
      "DescribeDestinations", 
      "DescribeExportTasks", 
      "DescribeLogGroups", 
      "DescribeLogStreams", 
      "DescribeMetricFilters", 
      "DescribeSubscriptionFilters", 
      "FilterLogEvents", 
      "GetLogEvents", 
      "PutDestination", 
      "PutDestinationPolicy", 
      "PutLogEvents", 
      "PutMetricFilter", 
      "PutRetentionPolicy", 
      "PutSubscriptionFilter", 
      "TestMetricFilter"
    ], 
    "HasResource": true, 
    "StringPrefix": "logs"
  }, 
  "Amazon Cognito Identity": {
    "ARNFormat": "arn:aws:cognito-identity:<region>:<account>:<resourceType>/<resourcePath>", 
    "ARNRegex": "^arn:aws:cognito-identity:.+", 
    "Actions": [
      "CreateIdentityPool", 
      "DeleteIdentities", 
      "DeleteIdentityPool", 
      "DescribeIdentity", 
      "DescribeIdentityPool", 
      "GetCredentialsForIdentity", 
      "GetId", 
      "GetIdentityPoolRoles", 
      "GetOpenIdToken", 
      "GetOpenIdTokenForDeveloperIdentity", 
      "ListIdentities", 
      "ListIdentityPools", 
      "LookupDeveloperIdentity", 
      "MergeDeveloperIdentities", 
      "SetIdentityPoolRoles", 
      "UnlinkDeveloperIdentity", 
      "UnlinkIdentity", 
      "UpdateIdentityPool"
    ], 
    "HasResource": true, 
    "StringPrefix": "cognito-identity"
  }, 
  "Amazon Cognito Sync": {
    "ARNFormat": "arn:aws:cognito-sync:<region>:<account>:<resourceType>/<resourcePath>:", 
    "ARNRegex": "^arn:aws:cognito-sync:.+", 
    "Actions": [
      "BulkPublish", 
      "DeleteDataset", 
      "DescribeDataset", 
      "DescribeIdentityPoolUsage", 
      "DescribeIdentityUsage", 
      "GetBulkPublishDetails", 
      "GetCognitoEvents", 
      "GetIdentityPoolConfiguration", 
      "ListDatasets", 
      "ListIdentityPoolUsage", 
      "ListRecords", 
      "QueryRecords", 
      "RegisterDevice", 
      "SetCognitoEvents", 
      "SetDatasetConfiguration", 
      "SetIdentityPoolConfiguration", 
      "SubscribeToDataset", 
      "UnsubscribeFromDataset", 
      "UpdateRecords"
    ], 
    "HasResource": true, 
    "StringPrefix": "cognito-sync"
  }, 
  "Amazon Cognito User Pools": {
    "ARNFormat": "arn:aws:cognito-idp:<region>:<account>:<resourceType>/<resourcePath>:", 
    "ARNRegex": "^arn:aws:cognito-idp:.+", 
    "Actions": [
      "AddCustomAttributes", 
      "AdminAddUserToGroup", 
      "AdminConfirmSignUp", 
      "AdminCreateUser", 
      "AdminDeleteUser", 
      "AdminDeleteUserAttributes", 
      "AdminDisableUser", 
      "AdminEnableUser", 
      "AdminForgetDevice", 
      "AdminGetDevice", 
      "AdminGetUser", 
      "AdminInitiateAuth", 
      "AdminListDevices", 
      "AdminListGroupsForUser", 
      "AdminRemoveUserFromGroup", 
      "AdminResetUserPassword", 
      "AdminRespondToAuthChallenge", 
      "AdminSetUserSettings", 
      "AdminUpdateDeviceStatus", 
      "AdminUpdateUserAttributes", 
      "AdminUserGlobalSignOut", 
      "ChangePassword", 
      "ConfirmDevice", 
      "ConfirmForgotPassword", 
      "ConfirmSignUp", 
      "CreateGroup", 
      "CreateUserImportJob", 
      "CreateUserPool", 
      "CreateUserPoolClient", 
      "DeleteGroup", 
      "DeleteUser", 
      "DeleteUserAttributes", 
      "DeleteUserPool", 
      "DeleteUserPoolClient", 
      "DescribeUserImportJob", 
      "DescribeUserPool", 
      "DescribeUserPoolClient", 
      "ForgetDevice", 
      "ForgotPassword", 
      "GetCSVHeader", 
      "GetDevice", 
      "GetGroup", 
      "GetUser", 
      "GetUserAttributeVerificationCode", 
      "GlobalSignOut", 
      "InitiateAuth", 
      "ListDevices", 
      "ListGroups", 
      "ListUserImportJobs", 
      "ListUserPoolClients", 
      "ListUsersInGroup", 
      "ResendConfirmationCode", 
      "RespondToAuthChallenge", 
      "SetUserSettings", 
      "SignUp", 
      "StartUserImportJob", 
      "StopUserImportJob", 
      "UpdateDeviceStatus", 
      "UpdateGroup", 
      "UpdateUserAttributes", 
      "UpdateUserPool", 
      "UpdateUserPoolClient", 
      "VerifyUserAttribute"
    ], 
    "HasResource": true, 
    "StringPrefix": "cognito-idp"
  }, 
  "Amazon DynamoDB": {
    "ARNFormat": "arn:aws:dynamodb:<region>:<accountID>:<resourceType>/<resourcePath>", 
    "ARNRegex": "^arn:aws:dynamodb:.+:.+", 
    "Actions": [
      "BatchGetItem", 
      "BatchWriteItem", 
      "CreateTable", 
      "DeleteItem", 
      "DeleteTable", 
      "DescribeLimits", 
      "DescribeReservedCapacity", 
      "DescribeReservedCapacityOfferings", 
      "DescribeStream", 
      "DescribeTable", 
      "DescribeTimeToLive", 
      "GetItem", 
      "GetRecords", 
      "GetShardIterator", 
      "ListStreams", 
      "ListTables", 
      "ListTagsOfResource", 
      "PurchaseReservedCapacityOfferings", 
      "PutItem", 
      "Query", 
      "Scan", 
      "TagResource", 
      "UntagResource", 
      "UpdateItem", 
      "UpdateTable"
    ], 
    "HasResource": true, 
    "StringPrefix": "dynamodb", 
    "conditionKeys": [
      "dynamodb:Attributes", 
      "dynamodb:LeadingKeys", 
      "dynamodb:ReturnConsumedCapacity", 
      "dynamodb:ReturnValues", 
      "dynamodb:Select"
    ]
  }, 
  "Amazon DynamoDB Accelerator (DAX)": {
    "ARNFormat": "arn:aws:dax:<region>:<accountId>:cache/<clustername>", 
    "ARNRegex": "^arn:aws:dax:.+:[0-9]+:cache/[a-zA-Z0-9_.-]+", 
    "Actions": [
      "BatchGetItem", 
      "BatchWriteItem", 
      "CreateCluster", 
      "CreateParameterGroup", 
      "CreateSubnetGroup", 
      "DecreaseReplicationFactor", 
      "DeleteCluster", 
      "DeleteItem", 
      "DeleteParameterGroup", 
      "DeleteSubnetGroup", 
      "DescribeClusters", 
      "DescribeDefaultParameters", 
      "DescribeEvents", 
      "DescribeParameterGroups", 
      "DescribeParameters", 
      "DescribeSubnetGroups", 
      "DescribeTable", 
      "GetItem", 
      "IncreaseReplicationFactor", 
      "ListTables", 
      "ListTags", 
      "PutItem", 
      "Query", 
      "RebootNode", 
      "Scan", 
      "TagResource", 
      "UntagResource", 
      "UpdateCluster", 
      "UpdateItem", 
      "UpdateParameterGroup", 
      "UpdateSubnetGroup"
    ], 
    "HasResource": true, 
    "StringPrefix": "dax"
  }, 
  "Amazon EC2": {
    "ARNFormat": "arn:aws:ec2:<region>:<account>:<resourceType>/<resourcePath>", 
    "ARNRegex": "^arn:aws:ec2:.+", 
    "Actions": [
      "AcceptReservedInstancesExchangeQuote", 
      "AcceptVpcPeeringConnection", 
      "AllocateAddress", 
      "AllocateHosts", 
      "AssignIpv6Addresses", 
      "AssignPrivateIpAddresses", 
      "AssociateAddress", 
      "AssociateDhcpOptions", 
      "AssociateFpgaImage", 
      "AssociateIamInstanceProfile", 
      "AssociateRouteTable", 
      "AssociateSubnetCidrBlock", 
      "AssociateVpcCidrBlock", 
      "AttachClassicLinkVpc", 
      "AttachInternetGateway", 
      "AttachNetworkInterface", 
      "AttachVolume", 
      "AttachVpnGateway", 
      "AuthorizeSecurityGroupEgress", 
      "AuthorizeSecurityGroupIngress", 
      "BundleInstance", 
      "CancelBundleTask", 
      "CancelConversionTask", 
      "CancelExportTask", 
      "CancelImportTask", 
      "CancelReservedInstancesListing", 
      "CancelSpotFleetRequests", 
      "CancelSpotInstanceRequests", 
      "ConfirmProductInstance", 
      "CopyImage", 
      "CopySnapshot", 
      "CreateCustomerGateway", 
      "CreateDefaultVpc", 
      "CreateDhcpOptions", 
      "CreateEgressOnlyInternetGateway", 
      "CreateFlowLogs", 
      "CreateFpgaImage", 
      "CreateImage", 
      "CreateInstanceExportTask", 
      "CreateInternetGateway", 
      "CreateKeyPair", 
      "CreateNatGateway", 
      "CreateNetworkAcl", 
      "CreateNetworkAclEntry", 
      "CreateNetworkInterface", 
      "CreateNetworkInterfacePermission", 
      "CreatePlacementGroup", 
      "CreateReservedInstancesListing", 
      "CreateRoute", 
      "CreateRouteTable", 
      "CreateSecurityGroup", 
      "CreateSnapshot", 
      "CreateSpotDatafeedSubscription", 
      "CreateSubnet", 
      "CreateTags", 
      "CreateVolume", 
      "CreateVpc", 
      "CreateVpcEndpoint", 
      "CreateVpcPeeringConnection", 
      "CreateVpnConnection", 
      "CreateVpnConnectionRoute", 
      "CreateVpnGateway", 
      "DeleteCustomerGateway", 
      "DeleteDhcpOptions", 
      "DeleteEgressOnlyInternetGateway", 
      "DeleteFlowLogs", 
      "DeleteInternetGateway", 
      "DeleteKeyPair", 
      "DeleteNatGateway", 
      "DeleteNetworkAcl", 
      "DeleteNetworkAclEntry", 
      "DeleteNetworkInterface", 
      "DeletePlacementGroup", 
      "DeleteRoute", 
      "DeleteRouteTable", 
      "DeleteSecurityGroup", 
      "DeleteSnapshot", 
      "DeleteSpotDatafeedSubscription", 
      "DeleteSubnet", 
      "DeleteTags", 
      "DeleteVolume", 
      "DeleteVpc", 
      "DeleteVpcEndpoints", 
      "DeleteVpcPeeringConnection", 
      "DeleteVpnConnection", 
      "DeleteVpnConnectionRoute", 
      "DeleteVpnGateway", 
      "DeregisterImage", 
      "DescribeAccountAttributes", 
      "DescribeAddresses", 
      "DescribeAvailabilityZones", 
      "DescribeBundleTasks", 
      "DescribeClassicLinkInstances", 
      "DescribeConversionTasks", 
      "DescribeCustomerGateways", 
      "DescribeDhcpOptions", 
      "DescribeEgressOnlyInternetGateways", 
      "DescribeExportTasks", 
      "DescribeFlowLogs", 
      "DescribeFpgaImages", 
      "DescribeHostReservationOfferings", 
      "DescribeHostReservations", 
      "DescribeHosts", 
      "DescribeIamInstanceProfileAssociation", 
      "DescribeIamInstanceProfileAssociations", 
      "DescribeIdFormat", 
      "DescribeIdentityIdFormat", 
      "DescribeImageAttribute", 
      "DescribeImages", 
      "DescribeImportImageTasks", 
      "DescribeImportSnapshotTasks", 
      "DescribeInstanceAttribute", 
      "DescribeInstanceStatus", 
      "DescribeInstances", 
      "DescribeInternetGateways", 
      "DescribeKeyPairs", 
      "DescribeMovingAddresses", 
      "DescribeNatGateways", 
      "DescribeNetworkAcls", 
      "DescribeNetworkInterfaceAttribute", 
      "DescribeNetworkInterfaces", 
      "DescribePlacementGroups", 
      "DescribePrefixLists", 
      "DescribeRegions", 
      "DescribeReservedInstances", 
      "DescribeReservedInstancesListings", 
      "DescribeReservedInstancesModifications", 
      "DescribeReservedInstancesOfferings", 
      "DescribeRouteTables", 
      "DescribeScheduledInstanceAvailability", 
      "DescribeScheduledInstances", 
      "DescribeSecurityGroupReferences", 
      "DescribeSecurityGroups", 
      "DescribeSnapshotAttribute", 
      "DescribeSnapshots", 
      "DescribeSpotDatafeedSubscription", 
      "DescribeSpotFleetInstances", 
      "DescribeSpotFleetRequestHistory", 
      "DescribeSpotFleetRequests", 
      "DescribeSpotInstanceRequests", 
      "DescribeSpotPriceHistory", 
      "DescribeStaleSecurityGroups", 
      "DescribeSubnets", 
      "DescribeTags", 
      "DescribeVolumeAttribute", 
      "DescribeVolumeStatus", 
      "DescribeVolumes", 
      "DescribeVolumesModifications", 
      "DescribeVpcAttribute", 
      "DescribeVpcClassicLink", 
      "DescribeVpcClassicLinkDnsSupport", 
      "DescribeVpcEndpointServices", 
      "DescribeVpcEndpoints", 
      "DescribeVpcPeeringConnections", 
      "DescribeVpcs", 
      "DescribeVpnConnections", 
      "DescribeVpnGateways", 
      "DetachClassicLinkVpc", 
      "DetachInternetGateway", 
      "DetachNetworkInterface", 
      "DetachVolume", 
      "DetachVpnGateway", 
      "DisableVgwRoutePropagation", 
      "DisableVpcClassicLink", 
      "DisableVpcClassicLinkDnsSupport", 
      "DisassociateAddress", 
      "DisassociateFpgaImage", 
      "DisassociateIamInstanceProfile", 
      "DisassociateRouteTable", 
      "DisassociateSubnetCidrBlock", 
      "DisassociateVpcCidrBlock", 
      "EnableVgwRoutePropagation", 
      "EnableVolumeIO", 
      "EnableVpcClassicLink", 
      "EnableVpcClassicLinkDnsSupport", 
      "GetConsoleOutput", 
      "GetConsoleScreenshot", 
      "GetHostReservationPurchasePreview", 
      "GetPasswordData", 
      "GetReservedInstancesExchangeQuote", 
      "ImportImage", 
      "ImportInstance", 
      "ImportKeyPair", 
      "ImportSnapshot", 
      "ImportVolume", 
      "ModifyHosts", 
      "ModifyIdFormat", 
      "ModifyIdentityIdFormat", 
      "ModifyImageAttribute", 
      "ModifyInstanceAttribute", 
      "ModifyInstancePlacement", 
      "ModifyNetworkInterfaceAttribute", 
      "ModifyReservedInstances", 
      "ModifySnapshotAttribute", 
      "ModifySpotFleetRequest", 
      "ModifySubnetAttribute", 
      "ModifyVolume", 
      "ModifyVolumeAttribute", 
      "ModifyVpcAttribute", 
      "ModifyVpcEndpoint", 
      "ModifyVpcPeeringConnectionOptions", 
      "MonitorInstances", 
      "MoveAddressToVpc", 
      "PurchaseHostReservation", 
      "PurchaseReservedInstancesOffering", 
      "PurchaseScheduledInstances", 
      "RebootInstances", 
      "RegisterImage", 
      "RejectVpcPeeringConnection", 
      "ReleaseAddress", 
      "ReleaseHosts", 
      "ReplaceIamInstanceProfileAssociation", 
      "ReplaceNetworkAclAssociation", 
      "ReplaceNetworkAclEntry", 
      "ReplaceRoute", 
      "ReplaceRouteTableAssociation", 
      "ReportInstanceStatus", 
      "RequestSpotFleet", 
      "RequestSpotInstances", 
      "ResetImageAttribute", 
      "ResetInstanceAttribute", 
      "ResetNetworkInterfaceAttribute", 
      "ResetSnapshotAttribute", 
      "RestoreAddressToClassic", 
      "RevokeSecurityGroupEgress", 
      "RevokeSecurityGroupIngress", 
      "RunInstances", 
      "RunScheduledInstances", 
      "StartInstances", 
      "StopInstances", 
      "TerminateInstances", 
      "UnassignIpv6Addresses", 
      "UnassignPrivateIpAddresses", 
      "UnmonitorInstances", 
      "UpdateSecurityGroupRuleDescriptionsEgress", 
      "UpdateSecurityGroupRuleDescriptionsIngress"
    ], 
    "HasResource": true, 
    "StringPrefix": "ec2", 
    "conditionKeys": [
      "aws:RequestTag/tag-key", 
      "aws:TagKeys", 
      "ec2:AccepterVpc", 
      "ec2:AuthorizedUser", 
      "ec2:AvailabilityZone", 
      "ec2:CreateAction", 
      "ec2:EbsOptimized", 
      "ec2:Encrypted", 
      "ec2:ImageType", 
      "ec2:InstanceProfile", 
      "ec2:InstanceType", 
      "ec2:Owner", 
      "ec2:ParentSnapshot", 
      "ec2:ParentVolume", 
      "ec2:Permission", 
      "ec2:PlacementGroup", 
      "ec2:PlacementGroupStrategy", 
      "ec2:Public", 
      "ec2:Region", 
      "ec2:RequesterVpc", 
      "ec2:ReservedInstancesOfferingType", 
      "ec2:ResourceTag/", 
      "ec2:ResourceTag/tag-key", 
      "ec2:RootDeviceType", 
      "ec2:SnapshotTime", 
      "ec2:Subnet", 
      "ec2:Tenancy", 
      "ec2:VolumeIops", 
      "ec2:VolumeSize", 
      "ec2:VolumeType", 
      "ec2:Vpc"
    ]
  }, 
  "Amazon EC2 Container Registry": {
    "ARNFormat": "arn:aws:ecr:<region>:<account_ID>:repository/<repository_name>", 
    "ARNRegex": "arn:aws:ecr+:[^:]+:[0-9]{12}:repository/.*", 
    "Actions": [
      "BatchCheckLayerAvailability", 
      "BatchDeleteImage", 
      "BatchGetImage", 
      "CompleteLayerUpload", 
      "CreateRepository", 
      "DeleteRepository", 
      "DeleteRepositoryPolicy", 
      "DescribeImages", 
      "DescribeRepositories", 
      "GetAuthorizationToken", 
      "GetDownloadUrlForLayer", 
      "GetRepositoryPolicy", 
      "InitiateLayerUpload", 
      "ListImages", 
      "PutImage", 
      "SetRepositoryPolicy", 
      "UploadLayerPart"
    ], 
    "HasResource": true, 
    "StringPrefix": "ecr"
  }, 
  "Amazon EC2 Container Service": {
    "ARNFormat": "arn:aws:ecs:<region>:<account_ID>:<resource_type>/<relative_ID>", 
    "ARNRegex": "^arn:aws:ecs:.+", 
    "Actions": [
      "CreateCluster", 
      "CreateService", 
      "DeleteCluster", 
      "DeleteService", 
      "DeregisterContainerInstance", 
      "DeregisterTaskDefinition", 
      "DescribeClusters", 
      "DescribeContainerInstances", 
      "DescribeServices", 
      "DescribeTaskDefinition", 
      "DescribeTasks", 
      "DiscoverPollEndpoint", 
      "ListClusters", 
      "ListContainerInstances", 
      "ListServices", 
      "ListTaskDefinitionFamilies", 
      "ListTaskDefinitions", 
      "ListTasks", 
      "Poll", 
      "RegisterContainerInstance", 
      "RegisterTaskDefinition", 
      "RunTask", 
      "StartTask", 
      "StartTelemetrySession", 
      "StopTask", 
      "SubmitContainerStateChange", 
      "SubmitTaskStateChange", 
      "UpdateContainerAgent", 
      "UpdateService"
    ], 
    "HasResource": true, 
    "StringPrefix": "ecs", 
    "conditionKeys": [
      "ecs:cluster", 
      "ecs:container-instances"
    ]
  }, 
  "Amazon ElastiCache": {
    "Actions": [
      "AddTagsToResource", 
      "AuthorizeCacheSecurityGroupIngress", 
      "CopySnapshot", 
      "CreateCacheCluster", 
      "CreateCacheParameterGroup", 
      "CreateCacheSecurityGroup", 
      "CreateCacheSubnetGroup", 
      "CreateReplicationGroup", 
      "CreateSnapshot", 
      "DeleteCacheCluster", 
      "DeleteCacheParameterGroup", 
      "DeleteCacheSecurityGroup", 
      "DeleteCacheSubnetGroup", 
      "DeleteReplicationGroup", 
      "DeleteSnapshot", 
      "DescribeCacheClusters", 
      "DescribeCacheEngineVersions", 
      "DescribeCacheParameterGroups", 
      "DescribeCacheParameters", 
      "DescribeCacheSecurityGroups", 
      "DescribeCacheSubnetGroups", 
      "DescribeEngineDefaultParameters", 
      "DescribeEvents", 
      "DescribeReplicationGroups", 
      "DescribeReservedCacheNodes", 
      "DescribeReservedCacheNodesOfferings", 
      "DescribeSnapshots", 
      "ListAllowedNodeTypeModifications", 
      "ListTagsForResource", 
      "ModifyCacheCluster", 
      "ModifyCacheParameterGroup", 
      "ModifyCacheSubnetGroup", 
      "ModifyReplicationGroup", 
      "PurchaseReservedCacheNodesOffering", 
      "RebootCacheCluster", 
      "RemoveTagsFromResource", 
      "ResetCacheParameterGroup", 
      "RevokeCacheSecurityGroupIngress"
    ], 
    "HasResource": false, 
    "StringPrefix": "elasticache"
  }, 
  "Amazon Elastic File System": {
    "ARNFormat": "arn:aws:elasticfilesystem:<region>:<account-id>:file-system/<file-system-id>", 
    "ARNRegex": "^arn:aws:elasticfilesystem:.+", 
    "Actions": [
      "CreateFileSystem", 
      "CreateMountTarget", 
      "CreateTags", 
      "DeleteFileSystem", 
      "DeleteMountTarget", 
      "DeleteTags", 
      "DescribeFileSystems", 
      "DescribeMountTargetSecurityGroups", 
      "DescribeMountTargets", 
      "DescribeTags", 
      "ModifyMountTargetSecurityGroups"
    ], 
    "HasResource": true, 
    "StringPrefix": "elasticfilesystem"
  }, 
  "Amazon Elastic MapReduce": {
    "Actions": [
      "AddInstanceGroups", 
      "AddJobFlowSteps", 
      "AddTags", 
      "CancelSteps", 
      "CreateSecurityConfiguration", 
      "DeleteSecurityConfiguration", 
      "DescribeCluster", 
      "DescribeJobFlows", 
      "DescribeSecurityConfiguration", 
      "DescribeStep", 
      "ListBootstrapActions", 
      "ListClusters", 
      "ListInstanceGroups", 
      "ListInstances", 
      "ListSecurityConfigurations", 
      "ListSteps", 
      "ModifyInstanceGroups", 
      "PutAutoScalingPolicy", 
      "RemoveAutoScalingPolicy", 
      "RemoveTags", 
      "RunJobFlow", 
      "SetTerminationProtection", 
      "SetVisibleToAllUsers", 
      "TerminateJobFlows", 
      "ViewEventsFromAllClustersInConsole"
    ], 
    "HasResource": false, 
    "StringPrefix": "elasticmapreduce"
  }, 
  "Amazon Elastic Transcoder": {
    "ARNFormat": "arn:aws:elastictranscoder:<region>:<account>:<resourceType>/<resourceId>", 
    "ARNRegex": "^arn:aws:elastictranscoder:.+", 
    "Actions": [
      "CancelJob", 
      "CreateJob", 
      "CreatePipeline", 
      "CreatePreset", 
      "DeletePipeline", 
      "DeletePreset", 
      "ListJobsByPipeline", 
      "ListJobsByStatus", 
      "ListPipelines", 
      "ListPresets", 
      "ReadJob", 
      "ReadPipeline", 
      "ReadPreset", 
      "TestRole", 
      "UpdatePipeline", 
      "UpdatePipelineNotifications", 
      "UpdatePipelineStatus"
    ], 
    "HasResource": true, 
    "StringPrefix": "elastictranscoder"
  }, 
  "Amazon Elasticsearch Service": {
    "ARNFormat": "arn:aws:es:<region>:<account_ID>:<resource>", 
    "ARNRegex": "^arn:aws:es:.+", 
    "Actions": [
      "AddTags", 
      "CreateElasticsearchDomain", 
      "DeleteElasticsearchDomain", 
      "DescribeElasticsearchDomain", 
      "DescribeElasticsearchDomainConfig", 
      "DescribeElasticsearchDomains", 
      "ESHttpGet", 
      "ESHttpHead", 
      "ESHttpPost", 
      "ESHttpPut", 
      "ListDomainNames", 
      "ListTags", 
      "RemoveTags", 
      "UpdateElasticsearchDomainConfig"
    ], 
    "HasResource": true, 
    "StringPrefix": "es"
  }, 
  "Amazon GameLift": {
    "Actions": [
      "CreateAlias", 
      "CreateBuild", 
      "CreateFleet", 
      "CreateGameSession", 
      "CreatePlayerSession", 
      "CreatePlayerSessions", 
      "DeleteAlias", 
      "DeleteBuild", 
      "DeleteFleet", 
      "DeleteScalingPolicy", 
      "DescribeAlias", 
      "DescribeBuild", 
      "DescribeEC2InstanceLimits", 
      "DescribeFleetAttributes", 
      "DescribeFleetCapacity", 
      "DescribeFleetEvents", 
      "DescribeFleetPortSettings", 
      "DescribeFleetUtilization", 
      "DescribeGameSessionDetails", 
      "DescribeGameSessions", 
      "DescribeInstances", 
      "DescribePlayerSessions", 
      "DescribeRuntimeConfiguration", 
      "DescribeScalingPolicies", 
      "GetGameSessionLogUrl", 
      "GetInstanceAccess", 
      "ListAliases", 
      "ListBuilds", 
      "ListFleets", 
      "PutScalingPolicy", 
      "RequestUploadCredentials", 
      "ResolveAlias", 
      "SearchGameSessions", 
      "UpdateAlias", 
      "UpdateBuild", 
      "UpdateFleetAttributes", 
      "UpdateFleetCapacity", 
      "UpdateFleetPortSettings", 
      "UpdateGameSession", 
      "UpdateRuntimeConfiguration"
    ], 
    "HasResource": false, 
    "StringPrefix": "gamelift"
  }, 
  "Amazon Glacier": {
    "ARNFormat": "arn:aws:glacier:<region>:<accountID>:<relative-id>", 
    "ARNRegex": "^arn:aws:glacier:.+:.+:.+", 
    "Actions": [
      "AbortMultipartUpload", 
      "AbortVaultLock", 
      "AddTagsToVault", 
      "CompleteMultipartUpload", 
      "CompleteVaultLock", 
      "CreateVault", 
      "DeleteArchive", 
      "DeleteVault", 
      "DeleteVaultAccessPolicy", 
      "DeleteVaultNotifications", 
      "DescribeJob", 
      "DescribeVault", 
      "GetDataRetrievalPolicy", 
      "GetJobOutput", 
      "GetVaultAccessPolicy", 
      "GetVaultLock", 
      "GetVaultNotifications", 
      "InitiateJob", 
      "InitiateMultipartUpload", 
      "InitiateVaultLock", 
      "ListJobs", 
      "ListMultipartUploads", 
      "ListParts", 
      "ListProvisionedCapacity", 
      "ListTagsForVault", 
      "ListVaults", 
      "PurchaseProvisionedCapacity", 
      "RemoveTagsFromVault", 
      "SetDataRetrievalPolicy", 
      "SetVaultAccessPolicy", 
      "SetVaultNotifications", 
      "UploadArchive", 
      "UploadMultipartPart"
    ], 
    "HasResource": true, 
    "StringPrefix": "glacier", 
    "conditionKeys": [
      "glacier:ArchiveAgeInDays", 
      "glacier:ResourceTag/"
    ]
  }, 
  "Amazon Inspector": {
    "Actions": [
      "AddAttributesToFindings", 
      "CreateAssessmentTarget", 
      "CreateAssessmentTemplate", 
      "CreateResourceGroup", 
      "DeleteAssessmentRun", 
      "DeleteAssessmentTarget", 
      "DeleteAssessmentTemplate", 
      "DescribeAssessmentRuns", 
      "DescribeAssessmentTargets", 
      "DescribeAssessmentTemplates", 
      "DescribeCrossAccountAccessRole", 
      "DescribeFindings", 
      "DescribeResourceGroups", 
      "DescribeRulesPackages", 
      "GetTelemetryMetadata", 
      "ListAssessmentRunAgents", 
      "ListAssessmentRuns", 
      "ListAssessmentTargets", 
      "ListAssessmentTemplates", 
      "ListEventSubscriptions", 
      "ListFindings", 
      "ListRulesPackages", 
      "ListTagsForResource", 
      "PreviewAgents", 
      "RegisterCrossAccountAccessRole", 
      "RemoveAttributesFromFindings", 
      "SetTagsForResource", 
      "StartAssessmentRun", 
      "StopAssessmentRun", 
      "SubscribeToEvent", 
      "UnsubscribeFromEvent", 
      "UpdateAssessmentTarget"
    ], 
    "HasResource": false, 
    "StringPrefix": "inspector"
  }, 
  "Amazon Kinesis": {
    "ARNFormat": "arn:aws:kinesis:<region>:<account>:<resourceType>/<resourceName>", 
    "ARNRegex": "^arn:aws:kinesis:.+", 
    "Actions": [
      "AddTagsToStream", 
      "CreateStream", 
      "DecreaseStreamRetentionPeriod", 
      "DeleteStream", 
      "DescribeLimits", 
      "DescribeStream", 
      "DisableEnhancedMonitoring", 
      "EnableEnhancedMonitoring", 
      "GetRecords", 
      "GetShardIterator", 
      "IncreaseStreamRetentionPeriod", 
      "ListStreams", 
      "ListTagsForStream", 
      "MergeShards", 
      "PutRecord", 
      "PutRecords", 
      "RemoveTagsFromStream", 
      "SplitShard", 
      "UpdateShardCount"
    ], 
    "HasResource": true, 
    "StringPrefix": "kinesis"
  }, 
  "Amazon Kinesis Analytics": {
    "ARNFormat": "arn:aws:kinesisanalytics:<region>:<account_ID>:application/<applicationname>", 
    "ARNRegex": "^arn:aws:kinesisanalytics:.+:[0-9]+:application/[a-zA-Z0-9_.-]+", 
    "Actions": [
      "AddApplicationInput", 
      "AddApplicationOutput", 
      "AddApplicationReferenceDataSource", 
      "CreateApplication", 
      "DeleteApplication", 
      "DeleteApplicationOutput", 
      "DeleteApplicationReferenceDataSource", 
      "DescribeApplication", 
      "DiscoverInputSchema", 
      "ListApplications", 
      "StartApplication", 
      "StopApplication", 
      "UpdateApplication"
    ], 
    "HasResource": true, 
    "StringPrefix": "kinesisanalytics"
  }, 
  "Amazon Kinesis Firehose": {
    "ARNFormat": "arn:aws:firehose:<region>:<account_ID>:deliverystream/<deliverystreamname>", 
    "ARNRegex": "^arn:aws:firehose:.+:[0-9]+:deliverystream/.+", 
    "Actions": [
      "CreateDeliveryStream", 
      "DeleteDeliveryStream", 
      "DescribeDeliveryStream", 
      "ListDeliveryStreams", 
      "PutRecord", 
      "PutRecordBatch", 
      "UpdateDestination"
    ], 
    "HasResource": true, 
    "StringPrefix": "firehose"
  }, 
  "Amazon Lex": {
    "ARNFormat": "arn:aws:lex:<region>:<account_ID>:<type>:<name>", 
    "ARNRegex": "^arn:aws:lex:.+:[0-9]+:.+", 
    "Actions": [
      "CreateBotVersion", 
      "CreateIntentVersion", 
      "CreateSlotTypeVersion", 
      "DeleteBot", 
      "DeleteBotAlias", 
      "DeleteBotChannelAssociation", 
      "DeleteBotVersion", 
      "DeleteIntent", 
      "DeleteIntentVersion", 
      "DeleteSlotType", 
      "DeleteSlotTypeVersion", 
      "DeleteUtterances", 
      "GetBot", 
      "GetBotAlias", 
      "GetBotAliases", 
      "GetBotChannelAssociation", 
      "GetBotChannelAssociations", 
      "GetBotVersions", 
      "GetBots", 
      "GetBuiltinIntent", 
      "GetBuiltinIntents", 
      "GetBuiltinSlotTypes", 
      "GetIntent", 
      "GetIntentVersions", 
      "GetIntents", 
      "GetSlotType", 
      "GetSlotTypeVersions", 
      "GetSlotTypes", 
      "GetUtterancesView", 
      "PostContent", 
      "PostText", 
      "PutBot", 
      "PutBotAlias", 
      "PutIntent", 
      "PutSlotType"
    ], 
    "HasResource": true, 
    "StringPrefix": "lex", 
    "conditionKeys": [
      "lex:associatedIntents", 
      "lex:associatedSlotTypes", 
      "lex:channelType"
    ]
  }, 
  "Amazon Lightsail": {
    "ARNFormat": "arn:aws:lightsail:<regionName>:<userAccountId>:<resourceType>/<Id>", 
    "ARNRegex": "arn:aws:lightsail:.+", 
    "Actions": [
      "AllocateStaticIp", 
      "AttachStaticIp", 
      "CloseInstancePublicPorts", 
      "CreateDomain", 
      "CreateDomainEntry", 
      "CreateInstanceSnapshot", 
      "CreateInstances", 
      "CreateInstancesFromSnapshot", 
      "CreateKeyPair", 
      "DeleteDomain", 
      "DeleteDomainEntry", 
      "DeleteInstance", 
      "DeleteInstanceSnapshot", 
      "DeleteKeyPair", 
      "DetachStaticIp", 
      "DownloadDefaultKeyPair", 
      "GetActiveNames", 
      "GetBlueprints", 
      "GetBundles", 
      "GetDomain", 
      "GetDomains", 
      "GetInstance", 
      "GetInstanceAccessDetails", 
      "GetInstanceMetricData", 
      "GetInstancePortStates", 
      "GetInstanceSnapshot", 
      "GetInstanceSnapshots", 
      "GetInstanceState", 
      "GetInstances", 
      "GetKeyPair", 
      "GetKeyPairs", 
      "GetOperation", 
      "GetOperations", 
      "GetOperationsForResource", 
      "GetRegions", 
      "GetStaticIp", 
      "GetStaticIps", 
      "ImportKeyPair", 
      "IsVpcPeered", 
      "OpenInstancePublicPorts", 
      "PeerVpc", 
      "RebootInstance", 
      "ReleaseStaticIp", 
      "StartInstance", 
      "StopInstance", 
      "UnpeerVpc", 
      "UpdateDomainEntry"
    ], 
    "HasResource": true, 
    "StringPrefix": "lightsail"
  }, 
  "Amazon Machine Learning": {
    "ARNFormat": "arn:aws:machinelearning:<region>:<account_ID>:<resource_type>/<relative_ID>", 
    "ARNRegex": "^arn:aws:machinelearning:.+", 
    "Actions": [
      "AddTags", 
      "CreateBatchPrediction", 
      "CreateDataSourceFromRDS", 
      "CreateDataSourceFromRedshift", 
      "CreateDataSourceFromS3", 
      "CreateEvaluation", 
      "CreateMLModel", 
      "CreateRealtimeEndpoint", 
      "DeleteBatchPrediction", 
      "DeleteDataSource", 
      "DeleteEvaluation", 
      "DeleteMLModel", 
      "DeleteRealtimeEndpoint", 
      "DeleteTags", 
      "DescribeBatchPredictions", 
      "DescribeDataSources", 
      "DescribeEvaluations", 
      "DescribeMLModels", 
      "DescribeTags", 
      "GetBatchPrediction", 
      "GetDataSource", 
      "GetEvaluation", 
      "GetMLModel", 
      "Predict", 
      "UpdateBatchPrediction", 
      "UpdateDataSource", 
      "UpdateEvaluation", 
      "UpdateMLModel"
    ], 
    "HasResource": true, 
    "StringPrefix": "machinelearning"
  }, 
  "Amazon Mechanical Turk": {
    "Actions": [
      "ApproveAssignment", 
      "ApproveRejectedAssignment", 
      "AssignQualification", 
      "BlockWorker", 
      "ChangeHITTypeOfHIT", 
      "CreateHIT", 
      "CreateQualificationType", 
      "DisableHIT", 
      "DisposeHIT", 
      "DisposeQualificationType", 
      "ExtendHIT", 
      "ForceExpireHIT", 
      "GetAccountBalance", 
      "GetAssignment", 
      "GetAssignmentsForHIT", 
      "GetBlockedWorkers", 
      "GetBonusPayments", 
      "GetFileUploadURL", 
      "GetHIT", 
      "GetHITsForQualificationType", 
      "GetQualificationRequests", 
      "GetQualificationScore", 
      "GetQualificationType", 
      "GetQualificationsForQualificationType", 
      "GetRequesterStatistic", 
      "GetRequesterWorkerStatistic", 
      "GetReviewResultsForHIT", 
      "GetReviewableHITs", 
      "GrantBonus", 
      "GrantQualification", 
      "NotifyWorkers", 
      "RegisterHITType", 
      "RejectAssignment", 
      "RejectQualificationRequest", 
      "RevokeQualification", 
      "SearchHITs", 
      "SearchQualificationTypes", 
      "SendTestEventNotification", 
      "SetHITAsReviewing", 
      "SetHITTypeNotification", 
      "UnblockWorker", 
      "UpdateQualificationScore", 
      "UpdateQualificationType"
    ], 
    "HasResource": false, 
    "StringPrefix": "mechanicalturk"
  }, 
  "Amazon Mechanical Turk Crowd": {
    "ARNFormat": "arn:${Partition}:crowd:${region}:${account}:${resourceType}/${resourcePath}", 
    "ARNRegex": "^arn:${Partition}:crowd:.+", 
    "Actions": [
      "GetTask", 
      "PutTask"
    ], 
    "HasResource": true, 
    "StringPrefix": "crowd"
  }, 
  "Amazon Message Delivery Service": {
    "Actions": [
      "AcknowledgeMessage", 
      "DeleteMessage", 
      "FailMessage", 
      "GetEndpoint", 
      "GetMessages", 
      "SendReply"
    ], 
    "HasResource": false, 
    "StringPrefix": "ec2messages"
  }, 
  "Amazon Mobile Analytics": {
    "Actions": [
      "GetFinancialReports", 
      "GetReports", 
      "PutEvents"
    ], 
    "HasResource": false, 
    "StringPrefix": "mobileanalytics"
  }, 
  "Amazon Pinpoint": {
    "ARNFormat": "arn:aws:mobiletargeting:<region>:<account_ID>:.+", 
    "ARNRegex": "^arn:aws:mobiletargeting:.+", 
    "Actions": [
      "CreateCampaign", 
      "CreateImportJob", 
      "CreateSegment", 
      "DeleteApnsChannel", 
      "DeleteCampaign", 
      "DeleteGcmChannel", 
      "DeleteSegment", 
      "GetApnsChannel", 
      "GetApplicationSettings", 
      "GetCampaign", 
      "GetCampaignActivities", 
      "GetCampaignVersion", 
      "GetCampaignVersions", 
      "GetCampaigns", 
      "GetEndpoint", 
      "GetGcmChannel", 
      "GetImportJob", 
      "GetImportJobs", 
      "GetReports", 
      "GetSegment", 
      "GetSegmentImportJobs", 
      "GetSegmentVersion", 
      "GetSegmentVersions", 
      "GetSegments", 
      "UpdateApnsChannel", 
      "UpdateApplicationSettings", 
      "UpdateCampaign", 
      "UpdateEndpoint", 
      "UpdateEndpointsBatch", 
      "UpdateGcmChannel", 
      "UpdateSegment"
    ], 
    "HasResource": true, 
    "StringPrefix": "mobiletargeting"
  }, 
  "Amazon Polly": {
    "ARNFormat": "arn:aws:polly:<region>:<accountID>:<relative-id>", 
    "ARNRegex": "^arn:aws:polly::.+", 
    "Actions": [
      "DeleteLexicon", 
      "DescribeVoices", 
      "GetLexicon", 
      "ListLexicons", 
      "PutLexicon", 
      "SynthesizeSpeech"
    ], 
    "HasResource": true, 
    "StringPrefix": "polly"
  }, 
  "Amazon RDS": {
    "ARNFormat": "arn:aws:rds:<region>:<accountID>:<relative-id>", 
    "ARNRegex": "^arn:aws:rds:.+", 
    "Actions": [
      "AddRoleToDBCluster", 
      "AddSourceIdentifierToSubscription", 
      "AddTagsToResource", 
      "ApplyPendingMaintenanceAction", 
      "AuthorizeDBSecurityGroupIngress", 
      "CopyDBClusterSnapshot", 
      "CopyDBParameterGroup", 
      "CopyDBSnapshot", 
      "CopyOptionGroup", 
      "CreateDBCluster", 
      "CreateDBClusterParameterGroup", 
      "CreateDBClusterSnapshot", 
      "CreateDBInstance", 
      "CreateDBInstanceReadReplica", 
      "CreateDBParameterGroup", 
      "CreateDBSecurityGroup", 
      "CreateDBSnapshot", 
      "CreateDBSubnetGroup", 
      "CreateEventSubscription", 
      "CreateOptionGroup", 
      "DeleteDBCluster", 
      "DeleteDBClusterParameterGroup", 
      "DeleteDBClusterSnapshot", 
      "DeleteDBInstance", 
      "DeleteDBParameterGroup", 
      "DeleteDBSecurityGroup", 
      "DeleteDBSnapshot", 
      "DeleteDBSubnetGroup", 
      "DeleteEventSubscription", 
      "DeleteOptionGroup", 
      "DescribeAccountAttributes", 
      "DescribeCertificates", 
      "DescribeDBClusterParameterGroups", 
      "DescribeDBClusterParameters", 
      "DescribeDBClusterSnapshotAttributes", 
      "DescribeDBClusterSnapshots", 
      "DescribeDBClusters", 
      "DescribeDBEngineVersions", 
      "DescribeDBInstances", 
      "DescribeDBLogFiles", 
      "DescribeDBParameterGroups", 
      "DescribeDBParameters", 
      "DescribeDBSecurityGroups", 
      "DescribeDBSnapshotAttributes", 
      "DescribeDBSnapshots", 
      "DescribeDBSubnetGroups", 
      "DescribeEngineDefaultClusterParameters", 
      "DescribeEngineDefaultParameters", 
      "DescribeEventCategories", 
      "DescribeEventSubscriptions", 
      "DescribeEvents", 
      "DescribeOptionGroupOptions", 
      "DescribeOptionGroups", 
      "DescribeOrderableDBInstanceOptions", 
      "DescribePendingMaintenanceActions", 
      "DescribeReservedDBInstances", 
      "DescribeReservedDBInstancesOfferings", 
      "DownloadCompleteDBLogFile", 
      "DownloadDBLogFilePortion", 
      "FailoverDBCluster", 
      "ListTagsForResource", 
      "ModifyDBCluster", 
      "ModifyDBClusterParameterGroup", 
      "ModifyDBClusterSnapshotAttribute", 
      "ModifyDBInstance", 
      "ModifyDBParameterGroup", 
      "ModifyDBSnapshotAttribute", 
      "ModifyDBSubnetGroup", 
      "ModifyEventSubscription", 
      "ModifyOptionGroup", 
      "PromoteReadReplica", 
      "PurchaseReservedDBInstancesOffering", 
      "RebootDBInstance", 
      "RemoveSourceIdentifierFromSubscription", 
      "RemoveTagsFromResource", 
      "ResetDBClusterParameterGroup", 
      "ResetDBParameterGroup", 
      "RestoreDBClusterFromSnapshot", 
      "RestoreDBClusterToPointInTime", 
      "RestoreDBInstanceFromDBSnapshot", 
      "RestoreDBInstanceToPointInTime", 
      "RevokeDBSecurityGroupIngress", 
      "StartDBInstance", 
      "StopDBInstance"
    ], 
    "HasResource": true, 
    "StringPrefix": "rds", 
    "conditionKeys": [
      "Piops", 
      "rds:DatabaseClass", 
      "rds:DatabaseEngine", 
      "rds:DatabaseName", 
      "rds:MultiAz", 
      "rds:Piops", 
      "rds:StorageSize", 
      "rds:Vpc", 
      "rds:cluster-pg-tag", 
      "rds:cluster-snapshot-tag", 
      "rds:cluster-tag", 
      "rds:db-tag", 
      "rds:es-tag", 
      "rds:og-tag", 
      "rds:pg-tag", 
      "rds:ri-tag", 
      "rds:secgrp-tag", 
      "rds:snapshot-tag", 
      "rds:subgrp-tag"
    ]
  }, 
  "Amazon Redshift": {
    "ARNFormat": "arn:aws:redshift:<region>:<accountID>:<relative-id>", 
    "ARNRegex": "^arn:aws:redshift:.+:.+:.+", 
    "Actions": [
      "AuthorizeCluster", 
      "AuthorizeClusterSecurityGroupIngress", 
      "AuthorizeSnapshotAccess", 
      "CancelQuerySession", 
      "CopyClusterSnapshot", 
      "CreateCluster", 
      "CreateClusterParameterGroup", 
      "CreateClusterSecurityGroup", 
      "CreateClusterSnapshot", 
      "CreateClusterSubnetGroup", 
      "CreateClusterUser", 
      "CreateEventSubscription", 
      "CreateHsmClientCertificate", 
      "CreateHsmConfiguration", 
      "CreateSnapshotCopyGrant", 
      "CreateTags", 
      "DeleteCluster", 
      "DeleteClusterParameterGroup", 
      "DeleteClusterSecurityGroup", 
      "DeleteClusterSnapshot", 
      "DeleteClusterSubnetGroup", 
      "DeleteEventSubscription", 
      "DeleteHsmClientCertificate", 
      "DeleteHsmConfiguration", 
      "DeleteSnapshotCopyGrant", 
      "DeleteTags", 
      "DescribeClusterParameterGroups", 
      "DescribeClusterParameters", 
      "DescribeClusterSecurityGroups", 
      "DescribeClusterSnapshots", 
      "DescribeClusterSubnetGroups", 
      "DescribeClusterVersions", 
      "DescribeClusters", 
      "DescribeDefaultClusterParameters", 
      "DescribeEventCategories", 
      "DescribeEventSubscriptions", 
      "DescribeEvents", 
      "DescribeHsmClientCertificates", 
      "DescribeHsmConfigurations", 
      "DescribeLoggingStatus", 
      "DescribeOrderableClusterOptions", 
      "DescribeReservedNodeOfferings", 
      "DescribeReservedNodes", 
      "DescribeResize", 
      "DescribeSnapshotCopyGrants", 
      "DescribeTableRestoreStatus", 
      "DescribeTags", 
      "DisableLogging", 
      "DisableSnapshotCopy", 
      "EnableLogging", 
      "EnableSnapshotCopy", 
      "GetClusterCredentials", 
      "JoinGroup", 
      "ModifyCluster", 
      "ModifyClusterIamRoles", 
      "ModifyClusterParameterGroup", 
      "ModifyClusterSubnetGroup", 
      "ModifyEventSubscription", 
      "ModifySnapshotCopyRetentionPeriod", 
      "PurchaseReservedNodeOffering", 
      "RebootCluster", 
      "ResetClusterParameterGroup", 
      "RestoreFromClusterSnapshot", 
      "RestoreTableFromClusterSnapshot", 
      "RevokeClusterSecurityGroupIngress", 
      "RevokeSnapshotAccess", 
      "RotateEncryptionKey", 
      "ViewQueriesInConsole"
    ], 
    "HasResource": true, 
    "StringPrefix": "redshift", 
    "conditionKeys": [
      "redshift:DbName", 
      "redshift:DbUser", 
      "redshift:DurationSeconds"
    ]
  }, 
  "Amazon Rekognition": {
    "ARNFormat": "arn:aws:rekognition:<region>:<accountID>:<relative-id>", 
    "ARNRegex": "^arn:aws:rekognition::.+", 
    "Actions": [
      "CompareFaces", 
      "CreateCollection", 
      "DeleteCollection", 
      "DeleteFaces", 
      "DetectFaces", 
      "DetectLabels", 
      "DetectModerationLabels", 
      "IndexFaces", 
      "ListCollections", 
      "ListFaces", 
      "SearchFaces", 
      "SearchFacesByImage"
    ], 
    "HasResource": true, 
    "StringPrefix": "rekognition"
  }, 
  "Amazon Resource Group Tagging API": {
    "Actions": [
      "AddResourceTags", 
      "GetResources", 
      "GetTagKeys", 
      "GetTagValues", 
      "RemoveResourceTags", 
      "TagResources", 
      "UntagResources"
    ], 
    "HasResource": false, 
    "StringPrefix": "tag"
  }, 
  "Amazon Route 53": {
    "ARNFormat": "arn:aws:route53:::<resource>/<id>", 
    "ARNRegex": "^arn:aws:route53:::.+", 
    "Actions": [
      "AssociateVPCWithHostedZone", 
      "ChangeResourceRecordSets", 
      "ChangeTagsForResource", 
      "CreateHealthCheck", 
      "CreateHostedZone", 
      "CreateReusableDelegationSet", 
      "CreateTrafficPolicy", 
      "CreateTrafficPolicyInstance", 
      "CreateTrafficPolicyVersion", 
      "DeleteHealthCheck", 
      "DeleteHostedZone", 
      "DeleteReusableDelegationSet", 
      "DeleteTrafficPolicy", 
      "DeleteTrafficPolicyInstance", 
      "DisableDomainAutoRenew", 
      "DisassociateVPCFromHostedZone", 
      "EnableDomainAutoRenew", 
      "GetChange", 
      "GetCheckerIpRanges", 
      "GetGeoLocation", 
      "GetHealthCheck", 
      "GetHealthCheckCount", 
      "GetHealthCheckLastFailureReason", 
      "GetHealthCheckStatus", 
      "GetHostedZone", 
      "GetHostedZoneCount", 
      "GetReusableDelegationSet", 
      "GetTrafficPolicy", 
      "GetTrafficPolicyInstance", 
      "GetTrafficPolicyInstanceCount", 
      "ListGeoLocations", 
      "ListHealthChecks", 
      "ListHostedZones", 
      "ListHostedZonesByName", 
      "ListResourceRecordSets", 
      "ListReusableDelegationSets", 
      "ListTagsForResource", 
      "ListTagsForResources", 
      "ListTrafficPolicies", 
      "ListTrafficPolicyInstances", 
      "ListTrafficPolicyInstancesByHostedZone", 
      "ListTrafficPolicyInstancesByPolicy", 
      "ListTrafficPolicyVersions", 
      "TestDNSAnswer", 
      "UpdateHealthCheck", 
      "UpdateHostedZoneComment", 
      "UpdateTrafficPolicyComment", 
      "UpdateTrafficPolicyInstance"
    ], 
    "HasResource": true, 
    "StringPrefix": "route53"
  }, 
  "Amazon Route53 Domains": {
    "Actions": [
      "CheckDomainAvailability", 
      "DeleteTagsForDomain", 
      "DisableDomainAutoRenew", 
      "DisableDomainTransferLock", 
      "EnableDomainAutoRenew", 
      "EnableDomainTransferLock", 
      "GetContactReachabilityStatus", 
      "GetDomainDetail", 
      "GetDomainSuggestions", 
      "GetOperationDetail", 
      "ListDomains", 
      "ListOperations", 
      "ListTagsForDomain", 
      "RegisterDomain", 
      "RenewDomain", 
      "ResendContactReachabilityEmail", 
      "RetrieveDomainAuthCode", 
      "TransferDomain", 
      "UpdateDomainContact", 
      "UpdateDomainContactPrivacy", 
      "UpdateDomainNameservers", 
      "UpdateTagsForDomain", 
      "ViewBilling"
    ], 
    "HasResource": false, 
    "StringPrefix": "route53domains"
  }, 
  "Amazon S3": {
    "ARNFormat": "arn:aws:s3:::<bucket_name>/<key_name>", 
    "ARNRegex": "^arn:aws:s3:::.+", 
    "Actions": [
      "AbortMultipartUpload", 
      "CreateBucket", 
      "DeleteBucket", 
      "DeleteBucketPolicy", 
      "DeleteBucketWebsite", 
      "DeleteObject", 
      "DeleteObjectTagging", 
      "DeleteObjectVersion", 
      "DeleteObjectVersionTagging", 
      "GetAccelerateConfiguration", 
      "GetAnalyticsConfiguration", 
      "GetBucketAcl", 
      "GetBucketCORS", 
      "GetBucketLocation", 
      "GetBucketLogging", 
      "GetBucketNotification", 
      "GetBucketPolicy", 
      "GetBucketRequestPayment", 
      "GetBucketTagging", 
      "GetBucketVersioning", 
      "GetBucketWebsite", 
      "GetInventoryConfiguration", 
      "GetIpConfiguration", 
      "GetLifecycleConfiguration", 
      "GetMetricsConfiguration", 
      "GetObject", 
      "GetObjectAcl", 
      "GetObjectTagging", 
      "GetObjectTorrent", 
      "GetObjectVersion", 
      "GetObjectVersionAcl", 
      "GetObjectVersionForReplication", 
      "GetObjectVersionTagging", 
      "GetObjectVersionTorrent", 
      "GetReplicationConfiguration", 
      "HeadBucket", 
      "ListAllMyBuckets", 
      "ListBucket", 
      "ListBucketByTags", 
      "ListBucketMultipartUploads", 
      "ListBucketVersions", 
      "ListMultipartUploadParts", 
      "ListObjects", 
      "ObjectOwnerOverrideToBucketOwner", 
      "PutAccelerateConfiguration", 
      "PutAnalyticsConfiguration", 
      "PutBucketAcl", 
      "PutBucketCORS", 
      "PutBucketLogging", 
      "PutBucketNotification", 
      "PutBucketPolicy", 
      "PutBucketRequestPayment", 
      "PutBucketTagging", 
      "PutBucketVersioning", 
      "PutBucketWebsite", 
      "PutInventoryConfiguration", 
      "PutIpConfiguration", 
      "PutLifecycleConfiguration", 
      "PutMetricsConfiguration", 
      "PutObject", 
      "PutObjectAcl", 
      "PutObjectTagging", 
      "PutObjectVersionAcl", 
      "PutObjectVersionTagging", 
      "PutReplicationConfiguration", 
      "ReplicateDelete", 
      "ReplicateObject", 
      "ReplicateTags", 
      "RestoreObject"
    ], 
    "HasResource": true, 
    "StringPrefix": "s3", 
    "conditionKeys": [
      "s3:ExistingObjectTag/<key>", 
      "s3:LocationConstraint", 
      "s3:RequestObjectTag/<key>", 
      "s3:RequestObjectTagKeys", 
      "s3:VersionId", 
      "s3:authtype", 
      "s3:delimiter", 
      "s3:locationconstraint", 
      "s3:max-keys", 
      "s3:prefix", 
      "s3:signatureage", 
      "s3:signatureversion", 
      "s3:versionid", 
      "s3:x-amz-acl", 
      "s3:x-amz-content-sha256", 
      "s3:x-amz-copy-source", 
      "s3:x-amz-grant-full-control", 
      "s3:x-amz-grant-read", 
      "s3:x-amz-grant-read-acp", 
      "s3:x-amz-grant-write", 
      "s3:x-amz-grant-write-acp", 
      "s3:x-amz-metadata-directive", 
      "s3:x-amz-server-side-encryption", 
      "s3:x-amz-server-side-encryption-aws-kms-key-id", 
      "s3:x-amz-storage-class", 
      "s3:x-amz-website-redirect-location"
    ]
  }, 
  "Amazon SES": {
    "Actions": [
      "CloneReceiptRuleSet", 
      "CreateReceiptFilter", 
      "CreateReceiptRule", 
      "CreateReceiptRuleSet", 
      "DeleteIdentity", 
      "DeleteIdentityPolicy", 
      "DeleteReceiptFilter", 
      "DeleteReceiptRule", 
      "DeleteReceiptRuleSet", 
      "DeleteVerifiedEmailAddress", 
      "DescribeActiveReceiptRuleSet", 
      "DescribeReceiptRule", 
      "DescribeReceiptRuleSet", 
      "GetIdentityDkimAttributes", 
      "GetIdentityMailFromDomainAttributes", 
      "GetIdentityNotificationAttributes", 
      "GetIdentityPolicies", 
      "GetIdentityVerificationAttributes", 
      "GetSendQuota", 
      "GetSendStatistics", 
      "ListIdentities", 
      "ListIdentityPolicies", 
      "ListReceiptFilters", 
      "ListReceiptRuleSets", 
      "ListVerifiedEmailAddresses", 
      "PutIdentityPolicy", 
      "ReorderReceiptRuleSet", 
      "SendBounce", 
      "SendEmail", 
      "SendRawEmail", 
      "SetActiveReceiptRuleSet", 
      "SetIdentityDkimEnabled", 
      "SetIdentityFeedbackForwardingEnabled", 
      "SetIdentityHeadersInNotificationsEnabled", 
      "SetIdentityMailFromDomain", 
      "SetIdentityNotificationTopic", 
      "SetReceiptRulePosition", 
      "UpdateReceiptRule", 
      "VerifyDomainDkim", 
      "VerifyDomainIdentity", 
      "VerifyEmailAddress", 
      "VerifyEmailIdentity"
    ], 
    "HasResource": false, 
    "StringPrefix": "ses", 
    "conditionKeys": [
      "ses:FeedbackAddress", 
      "ses:FromAddress", 
      "ses:FromDisplayName", 
      "ses:Recipients"
    ]
  }, 
  "Amazon SNS": {
    "ARNFormat": "arn:aws:sns:<region>:<account_ID>:<topic_name>", 
    "ARNRegex": "^arn:aws:sns:.+", 
    "Actions": [
      "AddPermission", 
      "CheckIfPhoneNumberIsOptedOut", 
      "ConfirmSubscription", 
      "CreatePlatformApplication", 
      "CreatePlatformEndpoint", 
      "CreateTopic", 
      "DeleteEndpoint", 
      "DeletePlatformApplication", 
      "DeleteTopic", 
      "GetEndpointAttributes", 
      "GetPlatformApplicationAttributes", 
      "GetSMSAttributes", 
      "GetSubscriptionAttributes", 
      "GetTopicAttributes", 
      "ListEndpointsByPlatformApplication", 
      "ListPhoneNumbersOptedOut", 
      "ListPlatformApplications", 
      "ListSubscriptions", 
      "ListSubscriptionsByTopic", 
      "ListTopics", 
      "OptInPhoneNumber", 
      "Publish", 
      "RemovePermission", 
      "SetEndpointAttributes", 
      "SetPlatformApplicationAttributes", 
      "SetSMSAttributes", 
      "SetSubscriptionAttributes", 
      "SetTopicAttributes", 
      "Subscribe", 
      "Unsubscribe"
    ], 
    "HasResource": true, 
    "StringPrefix": "sns", 
    "conditionKeys": [
      "sns:Endpoint", 
      "sns:Protocol"
    ]
  }, 
  "Amazon SQS": {
    "ARNFormat": "arn:aws:sqs:<region>:<account_ID>:<queue_name>", 
    "ARNRegex": "^arn:aws:sqs:.+", 
    "Actions": [
      "AddPermission", 
      "ChangeMessageVisibility", 
      "ChangeMessageVisibilityBatch", 
      "CreateQueue", 
      "DeleteMessage", 
      "DeleteMessageBatch", 
      "DeleteQueue", 
      "GetQueueAttributes", 
      "GetQueueUrl", 
      "ListDeadLetterSourceQueues", 
      "ListQueues", 
      "PurgeQueue", 
      "ReceiveMessage", 
      "RemovePermission", 
      "SendMessage", 
      "SendMessageBatch", 
      "SetQueueAttributes"
    ], 
    "HasResource": true, 
    "StringPrefix": "sqs"
  }, 
  "Amazon Simple Systems Manager": {
    "ARNFormat": "arn:aws:ssm:<region>:<account_ID>:<document_name>", 
    "ARNRegex": "^arn:aws:(ssm|ec2):.+", 
    "Actions": [
      "AddTagsToResource", 
      "CancelCommand", 
      "CreateActivation", 
      "CreateAssociation", 
      "CreateAssociationBatch", 
      "CreateDocument", 
      "CreateMaintenanceWindow", 
      "CreatePatchBaseline", 
      "DeleteActivation", 
      "DeleteAssociation", 
      "DeleteDocument", 
      "DeleteMaintenanceWindow", 
      "DeleteParameter", 
      "DeleteParameters", 
      "DeletePatchBaseline", 
      "DeregisterManagedInstance", 
      "DeregisterPatchBaselineForPatchGroup", 
      "DeregisterTargetFromMaintenanceWindow", 
      "DeregisterTaskFromMaintenanceWindow", 
      "DescribeActivations", 
      "DescribeAssociation", 
      "DescribeAutomationActions", 
      "DescribeAutomationExecutions", 
      "DescribeAvailablePatches", 
      "DescribeDocument", 
      "DescribeDocumentPermission", 
      "DescribeEffectiveInstanceAssociations", 
      "DescribeEffectivePatchesForPatchBaseline", 
      "DescribeInstanceAssociationsStatus", 
      "DescribeInstanceInformation", 
      "DescribeInstancePatchStates", 
      "DescribeInstancePatchStatesForPatchGroup", 
      "DescribeInstancePatches", 
      "DescribeMaintenanceWindowExecutionTaskInvocations", 
      "DescribeMaintenanceWindowExecutionTasks", 
      "DescribeMaintenanceWindowExecutions", 
      "DescribeMaintenanceWindowTargets", 
      "DescribeMaintenanceWindowTasks", 
      "DescribeMaintenanceWindows", 
      "DescribeParameters", 
      "DescribePatchBaselines", 
      "DescribePatchGroupState", 
      "DescribePatchGroups", 
      "GetCommandInvocation", 
      "GetDefaultPatchBaseline", 
      "GetDeployablePatchSnapshotForInstance", 
      "GetDocument", 
      "GetInventory", 
      "GetInventorySchema", 
      "GetMaintenanceWindow", 
      "GetMaintenanceWindowExecution", 
      "GetMaintenanceWindowExecutionTask", 
      "GetMaintenanceWindowExecutionTaskInvocation", 
      "GetMaintenanceWindowTask", 
      "GetManifest", 
      "GetParameter", 
      "GetParameterHistory", 
      "GetParameters", 
      "GetParametersByPath", 
      "GetPatchBaseline", 
      "GetPatchBaselineForPatchGroup", 
      "ListAssociationVersions", 
      "ListAssociations", 
      "ListCommandInvocations", 
      "ListCommands", 
      "ListDocumentVersions", 
      "ListDocuments", 
      "ListInstanceAssociations", 
      "ListInventoryEntries", 
      "ListTagsForResource", 
      "ModifyDocumentPermission", 
      "PutConfigurePackageResult", 
      "PutInventory", 
      "PutParameter", 
      "RegisterDefaultPatchBaseline", 
      "RegisterPatchBaselineForPatchGroup", 
      "RegisterTargetWithMaintenanceWindow", 
      "RegisterTaskWithMaintenanceWindow", 
      "RemoveTagsFromResource", 
      "SendCommand", 
      "StartAssociationsOnce", 
      "UpdateAssociation", 
      "UpdateAssociationStatus", 
      "UpdateDocument", 
      "UpdateDocumentDefaultVersion", 
      "UpdateInstanceAssociationStatus", 
      "UpdateInstanceInformation", 
      "UpdateMaintenanceWindow", 
      "UpdateMaintenanceWindowTarget", 
      "UpdateMaintenanceWindowTask", 
      "UpdateManagedInstanceRole", 
      "UpdatePatchBaseline"
    ], 
    "HasResource": true, 
    "StringPrefix": "ssm"
  }, 
  "Amazon Simple Workflow Service": {
    "ARNFormat": "arn:aws:swf:<region>:<account>:/<domain>/<domainName>", 
    "ARNRegex": "^arn:aws:swf:.+", 
    "Actions": [
      "CancelTimer", 
      "CancelWorkflowExecution", 
      "CompleteWorkflowExecution", 
      "ContinueAsNewWorkflowExecution", 
      "CountClosedWorkflowExecutions", 
      "CountOpenWorkflowExecutions", 
      "CountPendingActivityTasks", 
      "CountPendingDecisionTasks", 
      "DeprecateActivityType", 
      "DeprecateDomain", 
      "DeprecateWorkflowType", 
      "DescribeActivityType", 
      "DescribeDomain", 
      "DescribeWorkflowExecution", 
      "DescribeWorkflowType", 
      "FailWorkflowExecution", 
      "GetWorkflowExecutionHistory", 
      "ListActivityTypes", 
      "ListClosedWorkflowExecutions", 
      "ListDomains", 
      "ListOpenWorkflowExecutions", 
      "ListWorkflowTypes", 
      "PollForActivityTask", 
      "PollForDecisionTask", 
      "RecordActivityTaskHeartbeat", 
      "RecordMarker", 
      "RegisterActivityType", 
      "RegisterDomain", 
      "RegisterWorkflowType", 
      "RequestCancelActivityTask", 
      "RequestCancelExternalWorkflowExecution", 
      "RequestCancelWorkflowExecution", 
      "RespondActivityTaskCanceled", 
      "RespondActivityTaskCompleted", 
      "RespondActivityTaskFailed", 
      "RespondDecisionTaskCompleted", 
      "ScheduleActivityTask", 
      "SignalExternalWorkflowExecution", 
      "SignalWorkflowExecution", 
      "StartChildWorkflowExecution", 
      "StartTimer", 
      "StartWorkflowExecution", 
      "TerminateWorkflowExecution"
    ], 
    "HasResource": true, 
    "StringPrefix": "swf", 
    "conditionKeys": [
      " swf:workflowType.name", 
      "swf:activityType.name", 
      "swf:activityType.version", 
      "swf:defaultTaskList.name", 
      "swf:name", 
      "swf:tagFilter.tag", 
      "swf:tagList.member.0", 
      "swf:tagList.member.1", 
      "swf:tagList.member.2", 
      "swf:tagList.member.3", 
      "swf:tagList.member.4", 
      "swf:taskList.name", 
      "swf:typeFilter.name", 
      "swf:typeFilter.version", 
      "swf:version", 
      "swf:workflowType.name", 
      "swf:workflowType.version"
    ]
  }, 
  "Amazon SimpleDB": {
    "ARNFormat": "arn:aws:sdb:<region>:<account_ID>:domain/<domain_name>", 
    "ARNRegex": "^arn:aws:sdb:.+", 
    "Actions": [
      "BatchDeleteAttributes", 
      "BatchPutAttributes", 
      "CreateDomain", 
      "DeleteAttributes", 
      "DeleteDomain", 
      "DomainMetadata", 
      "GetAttributes", 
      "ListDomains", 
      "PutAttributes", 
      "Select"
    ], 
    "HasResource": true, 
    "StringPrefix": "sdb"
  }, 
  "Amazon Storage Gateway": {
    "ARNFormat": "arn:aws:storagegateway:us-east-1:<account>:<resourceType>/<resourceName>", 
    "ARNRegex": "^arn:aws:storagegateway:.+", 
    "Actions": [
      "ActivateGateway", 
      "AddCache", 
      "AddTagsToResource", 
      "AddUploadBuffer", 
      "AddWorkingStorage", 
      "CancelArchival", 
      "CancelRetrieval", 
      "CreateCachediSCSIVolume", 
      "CreateNFSFileShare", 
      "CreateSnapshot", 
      "CreateSnapshotFromVolumeRecoveryPoint", 
      "CreateStorediSCSIVolume", 
      "CreateTapeWithBarcode", 
      "CreateTapes", 
      "DeleteBandwidthRateLimit", 
      "DeleteChapCredentials", 
      "DeleteFileShare", 
      "DeleteGateway", 
      "DeleteSnapshotSchedule", 
      "DeleteTape", 
      "DeleteTapeArchive", 
      "DeleteVolume", 
      "DescribeBandwidthRateLimit", 
      "DescribeCache", 
      "DescribeCachediSCSIVolumes", 
      "DescribeChapCredentials", 
      "DescribeGatewayInformation", 
      "DescribeMaintenanceStartTime", 
      "DescribeNFSFileShares", 
      "DescribeSnapshotSchedule", 
      "DescribeStorediSCSIVolumes", 
      "DescribeTapeArchives", 
      "DescribeTapeRecoveryPoints", 
      "DescribeTapes", 
      "DescribeUploadBuffer", 
      "DescribeVTLDevices", 
      "DescribeWorkingStorage", 
      "DisableGateway", 
      "ListFileShares", 
      "ListGateways", 
      "ListLocalDisks", 
      "ListTagsForResource", 
      "ListTapes", 
      "ListVolumeInitiators", 
      "ListVolumeRecoveryPoints", 
      "ListVolumes", 
      "RefreshCache", 
      "RemoveTagsFromResource", 
      "ResetCache", 
      "RetrieveTapeArchive", 
      "RetrieveTapeRecoveryPoint", 
      "SetLocalConsolePassword", 
      "ShutdownGateway", 
      "StartGateway", 
      "UpdateBandwidthRateLimit", 
      "UpdateChapCredentials", 
      "UpdateGatewayInformation", 
      "UpdateGatewaySoftwareNow", 
      "UpdateMaintenanceStartTime", 
      "UpdateNFSFileShare", 
      "UpdateSnapshotSchedule", 
      "UpdateVTLDeviceType"
    ], 
    "HasResource": true, 
    "StringPrefix": "storagegateway"
  }, 
  "Amazon WorkDocs": {
    "Actions": [
      "AbortDocumentVersionUpload", 
      "ActivateUser", 
      "AddResourcePermissions", 
      "AddUserToGroup", 
      "CheckAlias", 
      "CreateFolder", 
      "CreateInstance", 
      "CreateNotificationSubscription", 
      "CreateUser", 
      "DeactivateUser", 
      "DeleteDocument", 
      "DeleteFolder", 
      "DeleteFolderContents", 
      "DeleteInstance", 
      "DeleteNotificationSubscription", 
      "DeleteUser", 
      "DeregisterDirectory", 
      "DescribeAvailableDirectories", 
      "DescribeDocumentVersions", 
      "DescribeFolderContents", 
      "DescribeInstances", 
      "DescribeNotificationSubscriptions", 
      "DescribeResourcePermissions", 
      "DescribeUsers", 
      "GetDocument", 
      "GetDocumentPath", 
      "GetDocumentVersion", 
      "GetFolder", 
      "GetFolderPath", 
      "InitiateDocumentVersionUpload", 
      "RegisterDirectory", 
      "RemoveAllResourcePermissions", 
      "RemoveResourcePermission", 
      "RemoveUserFromGroup", 
      "UpdateDocument", 
      "UpdateDocumentVersion", 
      "UpdateFolder", 
      "UpdateInstanceAlias", 
      "UpdateUser"
    ], 
    "HasResource": false, 
    "StringPrefix": "workdocs"
  }, 
  "Amazon WorkMail": {
    "Actions": [
      "AddMembersToGroup", 
      "CreateGroup", 
      "CreateMailDomain", 
      "CreateMailUser", 
      "CreateOrganization", 
      "CreateResource", 
      "DeleteMailDomain", 
      "DeleteMobileDevice", 
      "DeleteOrganization", 
      "DescribeDirectories", 
      "DescribeKmsKeys", 
      "DescribeMailDomains", 
      "DescribeMailGroups", 
      "DescribeMailUsers", 
      "DescribeOrganizations", 
      "DisableMailGroups", 
      "DisableMailUsers", 
      "EnableMailDomain", 
      "EnableMailGroups", 
      "EnableMailUsers", 
      "GetMailDomainDetails", 
      "GetMailGroupDetails", 
      "GetMailUserDetails", 
      "GetMobileDeviceDetails", 
      "GetMobileDevicesForUser", 
      "GetMobilePolicyDetails", 
      "ListMembersInMailGroup", 
      "RemoveMembersFromGroup", 
      "ResetUserPassword", 
      "SearchMembers", 
      "SetAdmin", 
      "SetDefaultMailDomain", 
      "SetMailGroupDetails", 
      "SetMailUserDetails", 
      "SetMobilePolicyDetails", 
      "WipeMobileDevice"
    ], 
    "HasResource": false, 
    "StringPrefix": "workmail"
  }, 
  "Amazon WorkSpaces": {
    "ARNFormat": "arn:aws:workspaces:*:*", 
    "ARNRegex": "arn:aws:workspaces:*", 
    "Actions": [
      "CreateTags", 
      "CreateWorkspaces", 
      "DeleteTags", 
      "DescribeTags", 
      "DescribeWorkspaceBundles", 
      "DescribeWorkspaceDirectories", 
      "DescribeWorkspaces", 
      "DescribeWorkspacesConnectionStatus", 
      "ModifyWorkspaceProperties", 
      "RebootWorkspaces", 
      "RebuildWorkspaces", 
      "StartWorkspaces", 
      "StopWorkspaces", 
      "TerminateWorkspaces"
    ], 
    "HasResource": true, 
    "StringPrefix": "workspaces"
  }, 
  "Amazon WorkSpaces Application Manager": {
    "Actions": [
      "AuthenticatePackager"
    ], 
    "HasResource": false, 
    "StringPrefix": "wam"
  }, 
  "Application Auto Scaling": {
    "Actions": [
      "DeleteScalingPolicy", 
      "DeregisterScalableTarget", 
      "DescribeScalableTargets", 
      "DescribeScalingActivities", 
      "DescribeScalingPolicies", 
      "PutScalingPolicy", 
      "RegisterScalableTarget"
    ], 
    "HasResource": false, 
    "StringPrefix": "application-autoscaling"
  }, 
  "Application Discovery": {
    "Actions": [
      "AssociateConfigurationItemsToApplication", 
      "CreateApplication", 
      "CreateTags", 
      "DeleteApplications", 
      "DeleteTags", 
      "DescribeAgents", 
      "DescribeConfigurations", 
      "DescribeExportConfigurations", 
      "DescribeTags", 
      "DisassociateConfigurationItemsFromApplication", 
      "ExportConfigurations", 
      "GetDiscoverySummary", 
      "ListConfigurations", 
      "ListServerNeighbors", 
      "StartDataCollectionByAgentIds", 
      "StartExportTask", 
      "StopDataCollectionByAgentIds", 
      "UpdateApplication"
    ], 
    "HasResource": false, 
    "StringPrefix": "discovery"
  }, 
  "Auto Scaling": {
    "ARNFormat": "arn:${Partition}:autoscaling:<region>:<account>:<relative-id>", 
    "ARNRegex": "^arn:${Partition}:autoscaling:.+:.+:.+", 
    "Actions": [
      "AttachInstances", 
      "AttachLoadBalancerTargetGroups", 
      "AttachLoadBalancers", 
      "CompleteLifecycleAction", 
      "CreateAutoScalingGroup", 
      "CreateLaunchConfiguration", 
      "CreateOrUpdateTags", 
      "DeleteAutoScalingGroup", 
      "DeleteLaunchConfiguration", 
      "DeleteLifecycleHook", 
      "DeleteNotificationConfiguration", 
      "DeletePolicy", 
      "DeleteScheduledAction", 
      "DeleteTags", 
      "DescribeAccountLimits", 
      "DescribeAdjustmentTypes", 
      "DescribeAutoScalingGroups", 
      "DescribeAutoScalingInstances", 
      "DescribeAutoScalingNotificationTypes", 
      "DescribeLaunchConfigurations", 
      "DescribeLifecycleHookTypes", 
      "DescribeLifecycleHooks", 
      "DescribeLoadBalancerTargetGroups", 
      "DescribeLoadBalancers", 
      "DescribeMetricCollectionTypes", 
      "DescribeNotificationConfigurations", 
      "DescribePolicies", 
      "DescribeScalingActivities", 
      "DescribeScalingProcessTypes", 
      "DescribeScheduledActions", 
      "DescribeTags", 
      "DescribeTerminationPolicyTypes", 
      "DetachInstances", 
      "DetachLoadBalancerTargetGroups", 
      "DetachLoadBalancers", 
      "DisableMetricsCollection", 
      "EnableMetricsCollection", 
      "EnterStandby", 
      "ExecutePolicy", 
      "ExitStandby", 
      "PutLifecycleHook", 
      "PutNotificationConfiguration", 
      "PutScalingPolicy", 
      "PutScheduledUpdateGroupAction", 
      "RecordLifecycleActionHeartbeat", 
      "ResumeProcesses", 
      "SetDesiredCapacity", 
      "SetInstanceHealth", 
      "SetInstanceProtection", 
      "SuspendProcesses", 
      "TerminateInstanceInAutoScalingGroup", 
      "UpdateAutoScalingGroup"
    ], 
    "HasResource": true, 
    "StringPrefix": "autoscaling", 
    "conditionKeys": [
      "autoscaling:ImageId", 
      "autoscaling:InstanceType", 
      "autoscaling:LaunchConfigurationName", 
      "autoscaling:LoadBalancerNames", 
      "autoscaling:MaxSize", 
      "autoscaling:MinSize", 
      "autoscaling:ResourceTag/", 
      "autoscaling:SpotPrice", 
      "autoscaling:TargetGroupARNs", 
      "autoscaling:VPCZoneIdentifiers", 
      "aws:RequestTag/"
    ]
  }, 
  "Data Pipeline": {
    "Actions": [
      "ActivatePipeline", 
      "AddTags", 
      "CreatePipeline", 
      "DeactivatePipeline", 
      "DeletePipeline", 
      "DescribeObjects", 
      "DescribePipelines", 
      "EvaluateExpression", 
      "GetAccountLimits", 
      "GetPipelineDefinition", 
      "ListPipelines", 
      "PollForTask", 
      "PutAccountLimits", 
      "PutPipelineDefinition", 
      "QueryObjects", 
      "RemoveTags", 
      "ReportTaskProgress", 
      "ReportTaskRunnerHeartbeat", 
      "SetStatus", 
      "SetTaskStatus", 
      "ValidatePipelineDefinition"
    ], 
    "HasResource": false, 
    "StringPrefix": "datapipeline", 
    "conditionKeys": [
      "datapipeline:PipelineCreator", 
      "datapipeline:Tag", 
      "datapipeline:workerGroup"
    ]
  }, 
  "Elastic Load Balancing": {
    "ARNFormat": "arn:aws:elasticloadbalancing:<region>:<account>:<resourceType>/<resourceid>", 
    "ARNRegex": "^arn:aws:elasticloadbalancing:.+", 
    "Actions": [
      "AddTags", 
      "ApplySecurityGroupsToLoadBalancer", 
      "AttachLoadBalancerToSubnets", 
      "ConfigureHealthCheck", 
      "CreateAppCookieStickinessPolicy", 
      "CreateLBCookieStickinessPolicy", 
      "CreateLoadBalancer", 
      "CreateLoadBalancerListeners", 
      "CreateLoadBalancerPolicy", 
      "DeleteLoadBalancer", 
      "DeleteLoadBalancerListeners", 
      "DeleteLoadBalancerPolicy", 
      "DeregisterInstancesFromLoadBalancer", 
      "DescribeInstanceHealth", 
      "DescribeLoadBalancerAttributes", 
      "DescribeLoadBalancerPolicies", 
      "DescribeLoadBalancerPolicyTypes", 
      "DescribeLoadBalancers", 
      "DescribeTags", 
      "DetachLoadBalancerFromSubnets", 
      "DisableAvailabilityZonesForLoadBalancer", 
      "EnableAvailabilityZonesForLoadBalancer", 
      "ModifyLoadBalancerAttributes", 
      "RegisterInstancesWithLoadBalancer", 
      "RemoveTags", 
      "SetLoadBalancerListenerSSLCertificate", 
      "SetLoadBalancerPoliciesForBackendServer", 
      "SetLoadBalancerPoliciesOfListener"
    ], 
    "HasResource": true, 
    "StringPrefix": "elasticloadbalancing"
  }, 
  "Elastic Load Balancing V2": {
    "ARNFormat": "arn:aws:elasticloadbalancing:<region>:<account>:<resourceType>/<resourceid>", 
    "ARNRegex": "^arn:aws:elasticloadbalancing:.+", 
    "Actions": [
      "AddTags", 
      "CreateListener", 
      "CreateLoadBalancer", 
      "CreateRule", 
      "CreateTargetGroup", 
      "DeleteListener", 
      "DeleteLoadBalancer", 
      "DeleteRule", 
      "DeleteTargetGroup", 
      "DeregisterTargets", 
      "DescribeListeners", 
      "DescribeLoadBalancerAttributes", 
      "DescribeLoadBalancers", 
      "DescribeRules", 
      "DescribeSSLPolicies", 
      "DescribeTags", 
      "DescribeTargetGroupAttributes", 
      "DescribeTargetGroups", 
      "DescribeTargetHealth", 
      "ModifyListener", 
      "ModifyLoadBalancerAttributes", 
      "ModifyRule", 
      "ModifyTargetGroup", 
      "ModifyTargetGroupAttributes", 
      "RegisterTargets", 
      "RemoveTags", 
      "SetIpAddressType", 
      "SetRulePriorities", 
      "SetSecurityGroups", 
      "SetSubnets"
    ], 
    "HasResource": true, 
    "StringPrefix": "elasticloadbalancing"
  }, 
  "Identity And Access Management": {
    "ARNFormat": "arn:aws:iam::<namespace>:<relative-id>", 
    "ARNRegex": "^arn:aws:iam::.+", 
    "Actions": [
      "AddClientIDToOpenIDConnectProvider", 
      "AddRoleToInstanceProfile", 
      "AddUserToGroup", 
      "AttachGroupPolicy", 
      "AttachRolePolicy", 
      "AttachUserPolicy", 
      "ChangePassword", 
      "CreateAccessKey", 
      "CreateAccountAlias", 
      "CreateGroup", 
      "CreateInstanceProfile", 
      "CreateLoginProfile", 
      "CreateOpenIDConnectProvider", 
      "CreatePolicy", 
      "CreatePolicyVersion", 
      "CreateRole", 
      "CreateSAMLProvider", 
      "CreateServiceLinkedRole", 
      "CreateServiceSpecificCredential", 
      "CreateUser", 
      "CreateVirtualMFADevice", 
      "DeactivateMFADevice", 
      "DeleteAccessKey", 
      "DeleteAccountAlias", 
      "DeleteAccountPasswordPolicy", 
      "DeleteGroup", 
      "DeleteGroupPolicy", 
      "DeleteInstanceProfile", 
      "DeleteLoginProfile", 
      "DeleteOpenIDConnectProvider", 
      "DeletePolicy", 
      "DeletePolicyVersion", 
      "DeleteRole", 
      "DeleteRolePolicy", 
      "DeleteSAMLProvider", 
      "DeleteSSHPublicKey", 
      "DeleteServerCertificate", 
      "DeleteServiceLinkedRole", 
      "DeleteServiceSpecificCredential", 
      "DeleteSigningCertificate", 
      "DeleteUser", 
      "DeleteUserPolicy", 
      "DeleteVirtualMFADevice", 
      "DetachGroupPolicy", 
      "DetachRolePolicy", 
      "DetachUserPolicy", 
      "EnableMFADevice", 
      "GenerateCredentialReport", 
      "GenerateServiceLastAccessedDetails", 
      "GetAccessKeyLastUsed", 
      "GetAccountAuthorizationDetails", 
      "GetAccountPasswordPolicy", 
      "GetAccountSummary", 
      "GetContextKeysForCustomPolicy", 
      "GetContextKeysForPrincipalPolicy", 
      "GetCredentialReport", 
      "GetGroup", 
      "GetGroupPolicy", 
      "GetInstanceProfile", 
      "GetLoginProfile", 
      "GetOpenIDConnectProvider", 
      "GetPolicy", 
      "GetPolicyVersion", 
      "GetRole", 
      "GetRolePolicy", 
      "GetSAMLProvider", 
      "GetSSHPublicKey", 
      "GetServerCertificate", 
      "GetServiceLastAccessedDetails", 
      "GetServiceLastAccessedDetailsWithEntities", 
      "GetServiceLinkedRoleDeletionStatus", 
      "GetUser", 
      "GetUserPolicy", 
      "ListAccessKeys", 
      "ListAccountAliases", 
      "ListAttachedGroupPolicies", 
      "ListAttachedRolePolicies", 
      "ListAttachedUserPolicies", 
      "ListEntitiesForPolicy", 
      "ListGroupPolicies", 
      "ListGroups", 
      "ListGroupsForUser", 
      "ListInstanceProfiles", 
      "ListInstanceProfilesForRole", 
      "ListMFADevices", 
      "ListOpenIDConnectProviders", 
      "ListPolicies", 
      "ListPoliciesGrantingServiceAccess", 
      "ListPolicyVersions", 
      "ListRolePolicies", 
      "ListRoles", 
      "ListSAMLProviders", 
      "ListSSHPublicKeys", 
      "ListServerCertificates", 
      "ListServiceSpecificCredentials", 
      "ListSigningCertificates", 
      "ListUserPolicies", 
      "ListUsers", 
      "ListVirtualMFADevices", 
      "PassRole", 
      "PutGroupPolicy", 
      "PutRolePolicy", 
      "PutUserPolicy", 
      "RemoveClientIDFromOpenIDConnectProvider", 
      "RemoveRoleFromInstanceProfile", 
      "RemoveUserFromGroup", 
      "ResetServiceSpecificCredential", 
      "ResyncMFADevice", 
      "SetDefaultPolicyVersion", 
      "SimulateCustomPolicy", 
      "SimulatePrincipalPolicy", 
      "UpdateAccessKey", 
      "UpdateAccountPasswordPolicy", 
      "UpdateAssumeRolePolicy", 
      "UpdateGroup", 
      "UpdateLoginProfile", 
      "UpdateOpenIDConnectProviderThumbprint", 
      "UpdateRoleDescription", 
      "UpdateSAMLProvider", 
      "UpdateSSHPublicKey", 
      "UpdateServerCertificate", 
      "UpdateServiceSpecificCredential", 
      "UpdateSigningCertificate", 
      "UpdateUser", 
      "UploadSSHPublicKey", 
      "UploadServerCertificate", 
      "UploadSigningCertificate"
    ], 
    "HasResource": true, 
    "StringPrefix": "iam", 
    "conditionKeys": [
      "iam:PolicyARN"
    ]
  }, 
  "Manage Amazon API Gateway": {
    "ARNFormat": "arn:aws:apigateway:<region>::<api_gateway_resource_path>", 
    "ARNRegex": "^arn:aws:apigateway:.+", 
    "Actions": [
      "DELETE", 
      "GET", 
      "HEAD", 
      "OPTIONS", 
      "PATCH", 
      "POST", 
      "PUT"
    ], 
    "HasResource": true, 
    "StringPrefix": "apigateway"
  }
}